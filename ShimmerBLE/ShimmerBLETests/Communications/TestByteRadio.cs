using shimmer.Communications;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Text;
using System.Threading.Tasks;

namespace ShimmerBLETests.Communications
{
    public class TestByteRadio : IVerisenseByteCommunication
    {
        // string temp = string.Join(", ", ResponseBuffer);
        byte[] ReadStatusRequest = new byte[] { 0x11, 0x00, 0x00 };
        byte[] ReadDataRequest = new byte[] { 0x12, 0x00, 0x00 };
        byte[] StreamDataRequest = new byte[] { 0x2A, 0x01, 0x00, 0x01 };
        byte[] StopStreamRequest = new byte[] { 0x2A, 0x01, 0x00, 0x02 };
        byte[] ReadProdConfigRequest = new byte[] { 0x13, 0x00, 0x00 };
        byte[] ReadOpConfigRequest = new byte[] { 0x14, 0x00, 0x00 };
        byte[] ReadTimeRequest = new byte[] { 0x15, 0x00, 0x00 };
        byte[] WriteTimeRequest = new byte[] { 0x25, 0x00, 0x00 };
        byte[] ReadPendingEventsRequest = new byte[] { 0x17, 0x00, 0x00 };
        byte[] DFUCommand = new byte[] { 0x26, 0x00, 0x00 };
        int DataSyncMtuSize = 5;
        public Guid Asm_uuid { get; set; }

        public event EventHandler<ByteLevelCommunicationEvent> CommunicationEvent;

        public async Task<bool> Connect()
        {
            return true;
        }

        public async Task<bool> Disconnect()
        {
            return true;
        }

        public ConnectivityState GetConnectivityState()
        {
            throw new NotImplementedException();
        }

        public async Task<bool> WriteBytes(byte[] bytes)
        {
            if (bytes.Length == 3)
            {
                if (bytes[0] == ReadOpConfigRequest[0])
                {
                    byte[] result = new byte[] { 52, 72, 0, 90, 151, 0, 0, 0, 48, 32, 0, 127, 0, 216, 15, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 244, 24, 12, 3, 10, 15, 0, 24, 12, 3, 10, 15, 0, 24, 12, 3, 10, 15, 0, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 99, 40, 204, 204, 30, 0, 10, 0, 0, 0, 0, 1 };

                    if (CommunicationEvent != null)
                    {
                        CommunicationEvent.Invoke(null, new ByteLevelCommunicationEvent { Bytes = result, Event = ByteLevelCommunicationEvent.CommEvent.NewBytes });
                    }
                }
                else if (bytes[0] == ReadProdConfigRequest[0])
                {
                    // "51, 13, 0, 90, 215, 74, 1, 2, 4, 25, 1, 0, 1, 2, 87, 0"
                    byte[] result = new byte[] { 51, 13, 0, 90, 215, 74, 1, 2, 4, 25, 1, 0, 1, 2, 87, 0 };
                    if (CommunicationEvent != null)
                    {
                        CommunicationEvent.Invoke(null, new ByteLevelCommunicationEvent { Bytes = result, Event = ByteLevelCommunicationEvent.CommEvent.NewBytes });
                    }
                }
                else if (bytes[0] == ReadTimeRequest[0])
                {
                    byte[] result = new byte[] { 53, 7, 0, 194, 232, 157, 1, 254, 36, 20 };
                    if (CommunicationEvent != null)
                    {
                        CommunicationEvent.Invoke(null, new ByteLevelCommunicationEvent { Bytes = result, Event = ByteLevelCommunicationEvent.CommEvent.NewBytes });
                    }
                }
                else if (bytes[0] == WriteTimeRequest[0])
                {
                    byte[] result = new byte[] { 69, 0, 0 };
                    if (CommunicationEvent != null)
                    {
                        CommunicationEvent.Invoke(null, new ByteLevelCommunicationEvent { Bytes = result, Event = ByteLevelCommunicationEvent.CommEvent.NewBytes });
                    }
                }
                else if (bytes[0] == ReadPendingEventsRequest[0])
                {
                    byte[] result = new byte[] { 55, 1, 0, 2 };
                    if (CommunicationEvent != null)
                    {
                        CommunicationEvent.Invoke(null, new ByteLevelCommunicationEvent { Bytes = result, Event = ByteLevelCommunicationEvent.CommEvent.NewBytes });
                    }
                }
                else if (bytes[0] == ReadStatusRequest[0])
                {
                    byte[] result = new byte[] { 49, 56, 0, 187, 162, 1, 37, 9, 25, 198, 229, 157, 1, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 32, 222, 7, 7, 0, 9, 0, 0, 0, 0, 0, 0, 1, 250, 9, 42, 255, 255, 255, 255, 255, 255, 43, 233, 157, 1, 192, 25, 0, 32, 5, 0, 0, 3, 0 };


                    if (CommunicationEvent != null)
                    {
                        CommunicationEvent.Invoke(null, new ByteLevelCommunicationEvent { Bytes = result, Event = ByteLevelCommunicationEvent.CommEvent.NewBytes });
                    }
                }
                else if (bytes[0] == ReadDataRequest[0])
                {
                    byte[] dataBytes;
                    if (VerisenseSyncTest.IsSyncNACKTest)
                    {
                        dataBytes = new byte[] { 58, 198, 0, 2, 180, 0, 22, 144, 255, 96, 255, 16, 240, 160, 255, 96, 255, 224, 239, 176, 255, 144, 255, 224, 239, 176, 255, 128, 255, 0, 240, 208, 255, 112, 255, 0, 240, 208, 255, 128, 255, 240, 239, 176, 255, 176, 255, 16, 240, 128, 255, 128, 255, 224, 239, 176, 255, 112, 255, 240, 239, 160, 255, 128, 255, 0, 240, 208, 255, 96, 255, 240, 239, 160, 255, 96, 255, 32, 240, 144, 255, 96, 255, 240, 239, 224, 255, 96, 255, 16, 240, 160, 255, 144, 255, 16, 240, 192, 255, 144, 255, 0, 240, 192, 255, 144, 255, 16, 240, 176, 255, 96, 255, 0, 240, 160, 255, 112, 255, 240, 239, 224, 255, 112, 255, 16, 240, 160, 255, 96, 255, 0, 240, 176, 255, 160, 255, 208, 239, 176, 255, 112, 255, 0, 240, 176, 255, 128, 255, 32, 240, 208, 255, 112, 255, 208, 239, 160, 255, 112, 255, 240, 239, 160, 255, 112, 255, 32, 240, 160, 255, 112, 255, 0, 240, 144, 255, 112, 255, 240, 239, 208, 255, 160, 255, 0, 240, 160, 255, 80, 255, 16, 240, 176, 255, 144, 255, 32, 240, 92, 241, 144 };
                        if (CommunicationEvent != null)
                        {
                            CommunicationEvent.Invoke(null, new ByteLevelCommunicationEvent { Bytes = dataBytes, Event = ByteLevelCommunicationEvent.CommEvent.NewBytes });
                        }
                    }
                    else
                    {
                        dataBytes = new byte[] { 58, 198, 0, 2, 180, 0, 22, 144, 255, 96, 255, 16, 240, 160, 255, 96, 255, 224, 239, 176, 255, 144, 255, 224, 239, 176, 255, 128, 255, 0, 240, 208, 255, 112, 255, 0, 240, 208, 255, 128, 255, 240, 239, 176, 255, 176, 255, 16, 240, 128, 255, 128, 255, 224, 239, 176, 255, 112, 255, 240, 239, 160, 255, 128, 255, 0, 240, 208, 255, 96, 255, 240, 239, 160, 255, 96, 255, 32, 240, 144, 255, 96, 255, 240, 239, 224, 255, 96, 255, 16, 240, 160, 255, 144, 255, 16, 240, 192, 255, 144, 255, 0, 240, 192, 255, 144, 255, 16, 240, 176, 255, 96, 255, 0, 240, 160, 255, 112, 255, 240, 239, 224, 255, 112, 255, 16, 240, 160, 255, 96, 255, 0, 240, 176, 255, 160, 255, 208, 239, 176, 255, 112, 255, 0, 240, 176, 255, 128, 255, 32, 240, 208, 255, 112, 255, 208, 239, 160, 255, 112, 255, 240, 239, 160, 255, 112, 255, 32, 240, 160, 255, 112, 255, 0, 240, 144, 255, 112, 255, 240, 239, 208, 255, 160, 255, 0, 240, 160, 255, 80, 255, 16, 240, 176, 255, 144, 255, 32, 240, 92, 241 };

                        if (VerisenseSyncTest.IsSyncMTUSizeTest)
                        {
                            double numberofsplits = Math.Ceiling(((double)dataBytes.Length) / (double)DataSyncMtuSize);
                            for (int i = 0; i < numberofsplits; i++)
                            {
                                int length = DataSyncMtuSize;
                                if (i + 1 == numberofsplits)
                                {
                                    length = dataBytes.Length - (i * DataSyncMtuSize);
                                }
                                int startIndex = i * DataSyncMtuSize;
                                int endIndex = startIndex + length - 1;
                                Debug.WriteLine("Index for mtubytes : " + startIndex + " " + endIndex);
                                byte[] dataBytesSmallPacket = new byte[length];
                                System.Array.Copy(dataBytes, startIndex, dataBytesSmallPacket, 0, length);
                                if (CommunicationEvent != null)
                                {
                                    CommunicationEvent.Invoke(null, new ByteLevelCommunicationEvent { Bytes = dataBytesSmallPacket, Event = ByteLevelCommunicationEvent.CommEvent.NewBytes });
                                }
                            }
                        }
                        else
                        {
                            if (CommunicationEvent != null)
                            {
                                CommunicationEvent.Invoke(null, new ByteLevelCommunicationEvent { Bytes = dataBytes, Event = ByteLevelCommunicationEvent.CommEvent.NewBytes });
                            }
                        }
                    }
                }
                else if (bytes[0] == DFUCommand[0])
                {
                    byte[] result = new byte[] { 70, 0, 0 };
                    if (CommunicationEvent != null)
                    {
                        CommunicationEvent.Invoke(null, new ByteLevelCommunicationEvent { Bytes = result, Event = ByteLevelCommunicationEvent.CommEvent.NewBytes });
                    }
                }
            }
            else if (bytes.Length == 4)
            {
                if (bytes[3] == StreamDataRequest[3])
                {
                    byte[] result = new byte[] { 74, 0, 0 };
                    if (CommunicationEvent != null)
                    {
                        CommunicationEvent.Invoke(null, new ByteLevelCommunicationEvent { Bytes = result, Event = ByteLevelCommunicationEvent.CommEvent.NewBytes });
                    }
                }
                else if (bytes[3] == StopStreamRequest[3])
                {
                    byte[] result = new byte[] { 74, 0, 0 };
                    if (CommunicationEvent != null)
                    {
                        CommunicationEvent.Invoke(null, new ByteLevelCommunicationEvent { Bytes = result, Event = ByteLevelCommunicationEvent.CommEvent.NewBytes });
                    }
                }
            }
            else if (bytes[0] == 36) //0x24 , write op config
            {   
                byte[] result = new byte[] { 68, 0, 0 }; //0x44 , write op config ack
                if (CommunicationEvent != null)
                {
                    CommunicationEvent.Invoke(null, new ByteLevelCommunicationEvent { Bytes = result, Event = ByteLevelCommunicationEvent.CommEvent.NewBytes });
                }
            }
            return true;
        }

        async Task<ConnectivityState> IVerisenseByteCommunication.Connect()
        {
            return ConnectivityState.Connected;
        }

        async Task<ConnectivityState> IVerisenseByteCommunication.Disconnect()
        {
            return ConnectivityState.Disconnected;
        }

        public void InjectEndBytes()
        {
            byte[] endBytes = new byte[] { 66, 0, 0 };

            if (CommunicationEvent != null)
            {
                CommunicationEvent.Invoke(null, new ByteLevelCommunicationEvent { Bytes = endBytes, Event = ByteLevelCommunicationEvent.CommEvent.NewBytes });
            }
        }
        public void InjectRawPacketAccel1()
        {
            byte[] rawPacket = new byte[] { 58,198,0, 2, 180, 0, 22, 144, 255, 96, 255, 16, 240, 160, 255, 96, 255, 224, 239, 176, 255, 144, 255, 224, 239, 176, 255, 128, 255, 0, 240, 208, 255, 112, 255, 0, 240, 208, 255, 128, 255, 240, 239, 176, 255, 176, 255, 16, 240, 128, 255, 128, 255, 224, 239, 176, 255, 112, 255, 240, 239, 160, 255, 128, 255, 0, 240, 208, 255, 96, 255, 240, 239, 160, 255, 96, 255, 32, 240, 144, 255, 96, 255, 240, 239, 224, 255, 96, 255, 16, 240, 160, 255, 144, 255, 16, 240, 192, 255, 144, 255, 0, 240, 192, 255, 144, 255, 16, 240, 176, 255, 96, 255, 0, 240, 160, 255, 112, 255, 240, 239, 224, 255, 112, 255, 16, 240, 160, 255, 96, 255, 0, 240, 176, 255, 160, 255, 208, 239, 176, 255, 112, 255, 0, 240, 176, 255, 128, 255, 32, 240, 208, 255, 112, 255, 208, 239, 160, 255, 112, 255, 240, 239, 160, 255, 112, 255, 32, 240, 160, 255, 112, 255, 0, 240, 144, 255, 112, 255, 240, 239, 208, 255, 160, 255, 0, 240, 160, 255, 80, 255, 16, 240, 176, 255, 144, 255, 32, 240, 92, 241 };

            if (CommunicationEvent != null)
            {
                CommunicationEvent.Invoke(null, new ByteLevelCommunicationEvent { Bytes = rawPacket, Event = ByteLevelCommunicationEvent.CommEvent.NewBytes });
            }
        }

        public void InjectRawPacketAccel2Gyro()
        {
            byte[] rawPacket = new byte[] { 58, 182, 31, 3, 195, 42, 14, 18, 0, 220, 255, 206, 255, 166, 0, 25, 0, 66, 248, 20, 0, 219, 255, 204, 255, 172, 0, 18, 0, 66, 248, 21, 0, 222, 255, 206, 255, 170, 0, 249, 255, 70, 248, 18, 0, 224, 255, 207, 255, 175, 0, 254, 255, 81, 248, 18, 0, 219, 255, 206, 255, 164, 0, 8, 0, 61, 248, 17, 0, 221, 255, 207, 255, 164, 0, 255, 255, 65, 248, 22, 0, 216, 255, 202, 255, 175, 0, 7, 0, 62, 248, 22, 0, 219, 255, 206, 255, 178, 0, 253, 255, 69, 248, 20, 0, 220, 255, 207, 255, 153, 0, 6, 0, 67, 248, 18, 0, 221, 255, 206, 255, 172, 0, 1, 0, 58, 248, 19, 0, 221, 255, 208, 255, 181, 0, 3, 0, 67, 248, 18, 0, 223, 255, 207, 255, 148, 0, 12, 0, 51, 248, 22, 0, 223, 255, 205, 255, 184, 0, 17, 0, 59, 248, 22, 0, 221, 255, 205, 255, 186, 0, 15, 0, 61, 248, 24, 0, 219, 255, 203, 255, 154, 0, 0, 0, 58, 248, 21, 0, 222, 255, 207, 255, 172, 0, 4, 0, 56, 248, 23, 0, 220, 255, 207, 255, 168, 0, 18, 0, 61, 248, 21, 0, 220, 255, 204, 255, 165, 0, 2, 0, 67, 248, 22, 0, 221, 255, 208, 255, 155, 0, 14, 0, 67, 248, 22, 0, 220, 255, 208, 255, 141, 0, 6, 0, 74, 248, 24, 0, 216, 255, 205, 255, 161, 0, 0, 0, 73, 248, 21, 0, 219, 255, 206, 255, 163, 0, 254, 255, 61, 248, 21, 0, 223, 255, 208, 255, 161, 0, 10, 0, 58, 248, 21, 0, 224, 255, 206, 255, 161, 0, 254, 255, 54, 248, 20, 0, 223, 255, 207, 255, 174, 0, 0, 0, 75, 248, 20, 0, 225, 255, 207, 255, 179, 0, 8, 0, 64, 248, 20, 0, 225, 255, 205, 255, 163, 0, 246, 255, 55, 248, 20, 0, 221, 255, 204, 255, 153, 0, 14, 0, 69, 248, 20, 0, 221, 255, 208, 255, 173, 0, 251, 255, 60, 248, 20, 0, 224, 255, 206, 255, 163, 0, 246, 255, 72, 248, 21, 0, 224, 255, 206, 255, 176, 0, 247, 255, 72, 248, 22, 0, 219, 255, 207, 255, 175, 0, 5, 0, 79, 248, 22, 0, 222, 255, 206, 255, 156, 0, 30, 0, 58, 248, 19, 0, 221, 255, 206, 255, 173, 0, 10, 0, 68, 248, 19, 0, 219, 255, 204, 255, 178, 0, 248, 255, 64, 248, 21, 0, 222, 255, 206, 255, 159, 0, 236, 255, 58, 248, 21, 0, 219, 255, 205, 255, 170, 0, 3, 0, 75, 248, 17, 0, 224, 255, 206, 255, 161, 0, 3, 0, 67, 248, 19, 0, 225, 255, 209, 255, 173, 0, 8, 0, 58, 248, 24, 0, 224, 255, 208, 255, 159, 0, 1, 0, 65, 248, 22, 0, 218, 255, 204, 255, 169, 0, 5, 0, 70, 248, 23, 0, 215, 255, 205, 255, 161, 0, 254, 255, 57, 248, 22, 0, 220, 255, 203, 255, 185, 0, 251, 255, 61, 248, 18, 0, 226, 255, 206, 255, 177, 0, 239, 255, 62, 248, 20, 0, 224, 255, 206, 255, 154, 0, 255, 255, 67, 248, 21, 0, 218, 255, 205, 255, 165, 0, 1, 0, 70, 248, 22, 0, 221, 255, 205, 255, 159, 0, 2, 0, 79, 248, 21, 0, 222, 255, 206, 255, 164, 0, 236, 255, 59, 248, 21, 0, 220, 255, 208, 255, 159, 0, 8, 0, 61, 248, 20, 0, 218, 255, 206, 255, 155, 0, 4, 0, 72, 248, 16, 0, 224, 255, 207, 255, 163, 0, 0, 0, 66, 248, 17, 0, 221, 255, 202, 255, 171, 0, 13, 0, 58, 248, 21, 0, 221, 255, 204, 255, 192, 0, 250, 255, 47, 248, 22, 0, 221, 255, 205, 255, 165, 0, 250, 255, 62, 248, 18, 0, 220, 255, 206, 255, 174, 0, 9, 0, 55, 248, 18, 0, 221, 255, 204, 255, 174, 0, 247, 255, 70, 248, 21, 0, 222, 255, 206, 255, 163, 0, 11, 0, 71, 248, 23, 0, 223, 255, 205, 255, 177, 0, 2, 0, 53, 248, 21, 0, 221, 255, 204, 255, 168, 0, 13, 0, 66, 248, 20, 0, 223, 255, 209, 255, 168, 0, 255, 255, 63, 248, 20, 0, 221, 255, 209, 255, 154, 0, 22, 0, 65, 248, 19, 0, 219, 255, 206, 255, 173, 0, 252, 255, 69, 248, 21, 0, 216, 255, 204, 255, 168, 0, 0, 0, 65, 248, 21, 0, 218, 255, 206, 255, 176, 0, 2, 0, 56, 248, 20, 0, 218, 255, 207, 255, 172, 0, 18, 0, 55, 248, 20, 0, 224, 255, 203, 255, 158, 0, 18, 0, 86, 248, 20, 0, 222, 255, 205, 255, 162, 0, 1, 0, 41, 248, 22, 0, 219, 255, 205, 255, 170, 0, 6, 0, 55, 248, 22, 0, 224, 255, 207, 255, 168, 0, 3, 0, 54, 248, 22, 0, 221, 255, 205, 255, 179, 0, 0, 0, 55, 248, 23, 0, 219, 255, 204, 255, 161, 0, 248, 255, 75, 248, 21, 0, 221, 255, 204, 255, 181, 0, 0, 0, 70, 248, 16, 0, 224, 255, 205, 255, 168, 0, 17, 0, 75, 248, 19, 0, 226, 255, 206, 255, 161, 0, 13, 0, 41, 248, 24, 0, 226, 255, 204, 255, 182, 0, 233, 255, 58, 248, 20, 0, 223, 255, 204, 255, 168, 0, 0, 0, 77, 248, 22, 0, 220, 255, 206, 255, 182, 0, 16, 0, 75, 248, 20, 0, 221, 255, 209, 255, 159, 0, 3, 0, 54, 248, 21, 0, 216, 255, 206, 255, 176, 0, 16, 0, 58, 248, 22, 0, 221, 255, 202, 255, 169, 0, 249, 255, 45, 248, 21, 0, 220, 255, 204, 255, 157, 0, 2, 0, 54, 248, 18, 0, 221, 255, 205, 255, 155, 0, 2, 0, 63, 248, 18, 0, 220, 255, 206, 255, 150, 0, 8, 0, 79, 248, 19, 0, 217, 255, 205, 255, 149, 0, 245, 255, 72, 248, 22, 0, 219, 255, 205, 255, 153, 0, 252, 255, 42, 248, 20, 0, 221, 255, 204, 255, 162, 0, 24, 0, 67, 248, 20, 0, 224, 255, 206, 255, 149, 0, 252, 255, 51, 248, 20, 0, 224, 255, 207, 255, 165, 0, 12, 0, 63, 248, 19, 0, 222, 255, 206, 255, 160, 0, 5, 0, 58, 248, 21, 0, 217, 255, 206, 255, 158, 0, 2, 0, 71, 248, 21, 0, 221, 255, 206, 255, 168, 0, 17, 0, 57, 248, 20, 0, 225, 255, 207, 255, 174, 0, 6, 0, 64, 248, 19, 0, 223, 255, 208, 255, 163, 0, 4, 0, 71, 248, 20, 0, 222, 255, 204, 255, 178, 0, 0, 0, 68, 248, 21, 0, 225, 255, 209, 255, 179, 0, 5, 0, 72, 248, 22, 0, 222, 255, 209, 255, 168, 0, 13, 0, 56, 248, 22, 0, 218, 255, 208, 255, 171, 0, 7, 0, 64, 248, 20, 0, 220, 255, 204, 255, 180, 0, 3, 0, 59, 248, 19, 0, 218, 255, 205, 255, 187, 0, 251, 255, 47, 248, 20, 0, 220, 255, 205, 255, 174, 0, 15, 0, 53, 248, 21, 0, 223, 255, 206, 255, 175, 0, 2, 0, 77, 248, 20, 0, 227, 255, 206, 255, 151, 0, 4, 0, 59, 248, 23, 0, 222, 255, 205, 255, 157, 0, 253, 255, 69, 248, 22, 0, 218, 255, 203, 255, 187, 0, 253, 255, 74, 248, 20, 0, 226, 255, 207, 255, 165, 0, 11, 0, 76, 248, 23, 0, 223, 255, 207, 255, 170, 0, 8, 0, 55, 248, 20, 0, 222, 255, 207, 255, 168, 0, 255, 255, 56, 248, 21, 0, 223, 255, 207, 255, 150, 0, 243, 255, 57, 248, 21, 0, 220, 255, 206, 255, 177, 0, 251, 255, 58, 248, 21, 0, 224, 255, 208, 255, 172, 0, 19, 0, 66, 248, 18, 0, 222, 255, 205, 255, 154, 0, 249, 255, 78, 248, 19, 0, 220, 255, 205, 255, 164, 0, 6, 0, 72, 248, 20, 0, 224, 255, 206, 255, 173, 0, 20, 0, 68, 248, 20, 0, 221, 255, 208, 255, 173, 0, 248, 255, 65, 248, 20, 0, 222, 255, 209, 255, 177, 0, 250, 255, 54, 248, 20, 0, 224, 255, 207, 255, 154, 0, 11, 0, 68, 248, 21, 0, 217, 255, 207, 255, 151, 0, 1, 0, 65, 248, 21, 0, 218, 255, 205, 255, 176, 0, 253, 255, 48, 248, 18, 0, 220, 255, 207, 255, 155, 0, 6, 0, 84, 248, 19, 0, 223, 255, 207, 255, 171, 0, 10, 0, 56, 248, 20, 0, 221, 255, 206, 255, 165, 0, 241, 255, 76, 248, 21, 0, 223, 255, 205, 255, 179, 0, 13, 0, 62, 248, 20, 0, 221, 255, 208, 255, 164, 0, 5, 0, 67, 248, 20, 0, 218, 255, 208, 255, 174, 0, 253, 255, 64, 248, 21, 0, 222, 255, 205, 255, 161, 0, 5, 0, 73, 248, 21, 0, 221, 255, 207, 255, 170, 0, 12, 0, 61, 248, 21, 0, 217, 255, 205, 255, 167, 0, 12, 0, 69, 248, 19, 0, 221, 255, 203, 255, 172, 0, 250, 255, 65, 248, 17, 0, 222, 255, 204, 255, 169, 0, 250, 255, 70, 248, 21, 0, 224, 255, 205, 255, 157, 0, 8, 0, 63, 248, 23, 0, 220, 255, 204, 255, 151, 0, 3, 0, 60, 248, 20, 0, 217, 255, 210, 255, 164, 0, 252, 255, 63, 248, 20, 0, 221, 255, 206, 255, 151, 0, 7, 0, 69, 248, 18, 0, 223, 255, 208, 255, 169, 0, 11, 0, 53, 248, 18, 0, 228, 255, 210, 255, 166, 0, 248, 255, 68, 248, 20, 0, 226, 255, 210, 255, 149, 0, 250, 255, 59, 248, 22, 0, 220, 255, 207, 255, 176, 0, 254, 255, 66, 248, 23, 0, 215, 255, 205, 255, 161, 0, 2, 0, 67, 248, 20, 0, 218, 255, 205, 255, 161, 0, 5, 0, 64, 248, 21, 0, 223, 255, 206, 255, 155, 0, 240, 255, 61, 248, 20, 0, 225, 255, 205, 255, 181, 0, 1, 0, 63, 248, 22, 0, 223, 255, 207, 255, 176, 0, 8, 0, 60, 248, 20, 0, 224, 255, 205, 255, 175, 0, 244, 255, 60, 248, 21, 0, 221, 255, 206, 255, 146, 0, 1, 0, 78, 248, 19, 0, 222, 255, 210, 255, 163, 0, 7, 0, 79, 248, 22, 0, 218, 255, 208, 255, 161, 0, 15, 0, 56, 248, 23, 0, 219, 255, 205, 255, 157, 0, 253, 255, 77, 248, 20, 0, 220, 255, 202, 255, 165, 0, 17, 0, 59, 248, 20, 0, 220, 255, 206, 255, 175, 0, 7, 0, 59, 248, 21, 0, 222, 255, 205, 255, 146, 0, 5, 0, 63, 248, 17, 0, 226, 255, 204, 255, 154, 0, 12, 0, 54, 248, 20, 0, 219, 255, 203, 255, 171, 0, 8, 0, 49, 248, 19, 0, 220, 255, 205, 255, 173, 0, 1, 0, 56, 248, 19, 0, 223, 255, 206, 255, 164, 0, 254, 255, 71, 248, 19, 0, 221, 255, 202, 255, 166, 0, 245, 255, 61, 248, 19, 0, 220, 255, 204, 255, 179, 0, 3, 0, 62, 248, 22, 0, 213, 255, 204, 255, 161, 0, 245, 255, 69, 248, 22, 0, 217, 255, 206, 255, 164, 0, 250, 255, 56, 248, 23, 0, 216, 255, 207, 255, 145, 0, 245, 255, 70, 248, 21, 0, 220, 255, 205, 255, 150, 0, 0, 0, 64, 248, 20, 0, 220, 255, 206, 255, 181, 0, 5, 0, 67, 248, 19, 0, 223, 255, 206, 255, 188, 0, 3, 0, 54, 248, 22, 0, 221, 255, 206, 255, 183, 0, 249, 255, 43, 248, 22, 0, 219, 255, 204, 255, 167, 0, 5, 0, 69, 248, 17, 0, 221, 255, 203, 255, 160, 0, 2, 0, 55, 248, 18, 0, 220, 255, 205, 255, 176, 0, 6, 0, 72, 248, 21, 0, 221, 255, 206, 255, 174, 0, 255, 255, 57, 248, 20, 0, 220, 255, 206, 255, 169, 0, 7, 0, 55, 248, 24, 0, 215, 255, 205, 255, 159, 0, 16, 0, 59, 248, 22, 0, 214, 255, 203, 255, 147, 0, 252, 255, 59, 248, 18, 0, 222, 255, 205, 255, 166, 0, 2, 0, 64, 248, 20, 0, 221, 255, 208, 255, 163, 0, 8, 0, 49, 248, 24, 0, 220, 255, 206, 255, 160, 0, 5, 0, 70, 248, 22, 0, 221, 255, 208, 255, 160, 0, 244, 255, 55, 248, 19, 0, 220, 255, 205, 255, 158, 0, 7, 0, 71, 248, 20, 0, 224, 255, 205, 255, 160, 0, 0, 0, 73, 248, 22, 0, 220, 255, 206, 255, 159, 0, 255, 255, 73, 248, 19, 0, 226, 255, 210, 255, 172, 0, 6, 0, 57, 248, 18, 0, 226, 255, 205, 255, 160, 0, 253, 255, 64, 248, 18, 0, 225, 255, 202, 255, 164, 0, 1, 0, 68, 248, 22, 0, 220, 255, 203, 255, 157, 0, 9, 0, 51, 248, 20, 0, 223, 255, 206, 255, 159, 0, 1, 0, 83, 248, 21, 0, 225, 255, 205, 255, 179, 0, 0, 0, 54, 248, 23, 0, 222, 255, 205, 255, 164, 0, 4, 0, 70, 248, 25, 0, 217, 255, 205, 255, 163, 0, 3, 0, 81, 248, 19, 0, 217, 255, 205, 255, 160, 0, 12, 0, 52, 248, 19, 0, 221, 255, 207, 255, 164, 0, 15, 0, 67, 248, 23, 0, 223, 255, 207, 255, 158, 0, 5, 0, 62, 248, 18, 0, 222, 255, 204, 255, 148, 0, 243, 255, 57, 248, 19, 0, 217, 255, 204, 255, 162, 0, 252, 255, 56, 248, 21, 0, 224, 255, 207, 255, 158, 0, 2, 0, 64, 248, 22, 0, 219, 255, 205, 255, 166, 0, 6, 0, 60, 248, 21, 0, 218, 255, 204, 255, 177, 0, 249, 255, 59, 248, 20, 0, 225, 255, 206, 255, 172, 0, 3, 0, 59, 248, 20, 0, 220, 255, 205, 255, 168, 0, 7, 0, 71, 248, 20, 0, 220, 255, 206, 255, 156, 0, 253, 255, 56, 248, 18, 0, 217, 255, 206, 255, 160, 0, 254, 255, 66, 248, 22, 0, 220, 255, 205, 255, 164, 0, 6, 0, 65, 248, 22, 0, 220, 255, 204, 255, 158, 0, 244, 255, 54, 248, 19, 0, 224, 255, 207, 255, 171, 0, 247, 255, 50, 248, 20, 0, 221, 255, 205, 255, 172, 0, 232, 255, 63, 248, 18, 0, 218, 255, 207, 255, 167, 0, 247, 255, 67, 248, 19, 0, 215, 255, 204, 255, 163, 0, 245, 255, 76, 248, 19, 0, 221, 255, 207, 255, 157, 0, 253, 255, 60, 248, 21, 0, 219, 255, 206, 255, 168, 0, 254, 255, 55, 248, 21, 0, 221, 255, 205, 255, 146, 0, 10, 0, 59, 248, 20, 0, 224, 255, 207, 255, 169, 0, 15, 0, 59, 248, 19, 0, 229, 255, 208, 255, 166, 0, 254, 255, 65, 248, 21, 0, 224, 255, 209, 255, 180, 0, 11, 0, 58, 248, 17, 0, 220, 255, 209, 255, 178, 0, 25, 0, 75, 248, 21, 0, 214, 255, 203, 255, 170, 0, 4, 0, 79, 248, 20, 0, 220, 255, 204, 255, 167, 0, 250, 255, 73, 248, 17, 0, 224, 255, 204, 255, 157, 0, 5, 0, 48, 248, 19, 0, 222, 255, 206, 255, 171, 0, 17, 0, 71, 248, 20, 0, 221, 255, 206, 255, 170, 0, 2, 0, 70, 248, 19, 0, 227, 255, 205, 255, 178, 0, 6, 0, 41, 248, 22, 0, 223, 255, 205, 255, 172, 0, 2, 0, 69, 248, 19, 0, 221, 255, 204, 255, 178, 0, 252, 255, 63, 248, 19, 0, 216, 255, 205, 255, 176, 0, 249, 255, 69, 248, 17, 0, 218, 255, 202, 255, 169, 0, 7, 0, 66, 248, 21, 0, 221, 255, 206, 255, 161, 0, 18, 0, 69, 248, 20, 0, 222, 255, 207, 255, 167, 0, 15, 0, 62, 248, 21, 0, 221, 255, 207, 255, 150, 0, 252, 255, 57, 248, 22, 0, 218, 255, 202, 255, 157, 0, 17, 0, 61, 248, 17, 0, 226, 255, 204, 255, 184, 0, 246, 255, 64, 248, 17, 0, 226, 255, 207, 255, 171, 0, 242, 255, 68, 248, 18, 0, 224, 255, 206, 255, 155, 0, 247, 255, 71, 248, 21, 0, 224, 255, 207, 255, 153, 0, 255, 255, 48, 248, 20, 0, 227, 255, 207, 255, 153, 0, 15, 0, 57, 248, 20, 0, 224, 255, 207, 255, 171, 0, 23, 0, 46, 248, 20, 0, 219, 255, 203, 255, 172, 0, 17, 0, 73, 248, 22, 0, 217, 255, 202, 255, 174, 0, 5, 0, 66, 248, 20, 0, 219, 255, 203, 255, 168, 0, 250, 255, 77, 248, 18, 0, 223, 255, 206, 255, 168, 0, 7, 0, 63, 248, 21, 0, 222, 255, 208, 255, 168, 0, 250, 255, 62, 248, 20, 0, 224, 255, 205, 255, 157, 0, 6, 0, 70, 248, 24, 0, 222, 255, 205, 255, 163, 0, 255, 255, 66, 248, 20, 0, 221, 255, 205, 255, 173, 0, 252, 255, 57, 248, 19, 0, 220, 255, 203, 255, 165, 0, 16, 0, 62, 248, 20, 0, 226, 255, 207, 255, 157, 0, 1, 0, 64, 248, 19, 0, 223, 255, 205, 255, 166, 0, 16, 0, 80, 248, 18, 0, 224, 255, 205, 255, 173, 0, 3, 0, 63, 248, 17, 0, 225, 255, 204, 255, 178, 0, 253, 255, 68, 248, 21, 0, 215, 255, 205, 255, 162, 0, 7, 0, 71, 248, 22, 0, 219, 255, 208, 255, 166, 0, 7, 0, 63, 248, 20, 0, 222, 255, 207, 255, 161, 0, 11, 0, 80, 248, 19, 0, 222, 255, 205, 255, 180, 0, 8, 0, 67, 248, 20, 0, 220, 255, 206, 255, 173, 0, 5, 0, 62, 248, 18, 0, 224, 255, 206, 255, 190, 0, 3, 0, 55, 248, 18, 0, 222, 255, 205, 255, 164, 0, 5, 0, 48, 248, 19, 0, 222, 255, 206, 255, 183, 0, 5, 0, 64, 248, 20, 0, 226, 255, 205, 255, 175, 0, 1, 0, 75, 248, 21, 0, 219, 255, 204, 255, 163, 0, 8, 0, 58, 248, 23, 0, 216, 255, 204, 255, 162, 0, 241, 255, 60, 248, 19, 0, 227, 255, 208, 255, 180, 0, 248, 255, 65, 248, 19, 0, 224, 255, 206, 255, 174, 0, 10, 0, 67, 248, 20, 0, 221, 255, 205, 255, 167, 0, 0, 0, 57, 248, 22, 0, 216, 255, 202, 255, 153, 0, 239, 255, 59, 248, 23, 0, 220, 255, 205, 255, 175, 0, 8, 0, 69, 248, 18, 0, 220, 255, 206, 255, 169, 0, 7, 0, 67, 248, 20, 0, 220, 255, 203, 255, 139, 0, 12, 0, 57, 248, 23, 0, 221, 255, 205, 255, 161, 0, 240, 255, 63, 248, 24, 0, 215, 255, 206, 255, 158, 0, 10, 0, 53, 248, 22, 0, 216, 255, 207, 255, 161, 0, 3, 0, 60, 248, 19, 0, 221, 255, 204, 255, 170, 0, 3, 0, 53, 248, 21, 0, 224, 255, 205, 255, 162, 0, 232, 255, 66, 248, 22, 0, 219, 255, 205, 255, 162, 0, 5, 0, 55, 248, 21, 0, 219, 255, 205, 255, 167, 0, 15, 0, 87, 248, 21, 0, 219, 255, 206, 255, 157, 0, 234, 255, 74, 248, 21, 0, 222, 255, 208, 255, 164, 0, 248, 255, 61, 248, 21, 0, 220, 255, 208, 255, 167, 0, 3, 0, 59, 248, 17, 0, 224, 255, 207, 255, 157, 0, 7, 0, 66, 248, 21, 0, 220, 255, 206, 255, 155, 0, 7, 0, 55, 248, 19, 0, 218, 255, 207, 255, 154, 0, 8, 0, 70, 248, 22, 0, 221, 255, 204, 255, 172, 0, 252, 255, 74, 248, 23, 0, 223, 255, 207, 255, 182, 0, 247, 255, 58, 248, 21, 0, 225, 255, 206, 255, 168, 0, 4, 0, 50, 248, 21, 0, 225, 255, 206, 255, 174, 0, 11, 0, 48, 248, 22, 0, 222, 255, 207, 255, 185, 0, 251, 255, 62, 248, 23, 0, 218, 255, 207, 255, 169, 0, 253, 255, 60, 248, 19, 0, 217, 255, 207, 255, 170, 0, 244, 255, 52, 248, 20, 0, 214, 255, 203, 255, 161, 0, 6, 0, 74, 248, 18, 0, 227, 255, 205, 255, 169, 0, 1, 0, 59, 248, 20, 0, 226, 255, 206, 255, 153, 0, 13, 0, 69, 248, 20, 0, 222, 255, 204, 255, 172, 0, 7, 0, 58, 248, 21, 0, 221, 255, 206, 255, 155, 0, 249, 255, 64, 248, 20, 0, 215, 255, 205, 255, 166, 0, 9, 0, 75, 248, 21, 0, 222, 255, 203, 255, 178, 0, 11, 0, 81, 248, 21, 0, 220, 255, 204, 255, 165, 0, 244, 255, 72, 248, 22, 0, 221, 255, 205, 255, 173, 0, 244, 255, 71, 248, 19, 0, 225, 255, 207, 255, 176, 0, 243, 255, 55, 248, 24, 0, 218, 255, 205, 255, 183, 0, 5, 0, 65, 248, 21, 0, 219, 255, 210, 255, 165, 0, 233, 255, 80, 248, 18, 0, 219, 255, 208, 255, 157, 0, 245, 255, 72, 248, 20, 0, 219, 255, 205, 255, 157, 0, 18, 0, 54, 248, 20, 0, 217, 255, 205, 255, 162, 0, 0, 0, 73, 248, 22, 0, 219, 255, 204, 255, 169, 0, 251, 255, 72, 248, 21, 0, 220, 255, 207, 255, 171, 0, 9, 0, 73, 248, 19, 0, 223, 255, 207, 255, 155, 0, 238, 255, 44, 248, 20, 0, 221, 255, 205, 255, 175, 0, 4, 0, 59, 248, 22, 0, 222, 255, 205, 255, 160, 0, 6, 0, 65, 248, 20, 0, 220, 255, 205, 255, 169, 0, 0, 0, 60, 248, 19, 0, 221, 255, 205, 255, 178, 0, 245, 255, 62, 248, 20, 0, 227, 255, 207, 255, 152, 0, 253, 255, 78, 248, 19, 0, 225, 255, 207, 255, 171, 0, 18, 0, 56, 248, 20, 0, 222, 255, 205, 255, 174, 0, 4, 0, 58, 248, 20, 0, 221, 255, 205, 255, 160, 0, 7, 0, 51, 248, 21, 0, 217, 255, 205, 255, 162, 0, 250, 255, 64, 248, 20, 0, 217, 255, 205, 255, 151, 0, 27, 0, 63, 248, 19, 0, 219, 255, 205, 255, 162, 0, 236, 255, 58, 248, 19, 0, 221, 255, 203, 255, 175, 0, 14, 0, 70, 248, 21, 0, 218, 255, 205, 255, 175, 0, 2, 0, 53, 248, 20, 0, 222, 255, 204, 255, 158, 0, 3, 0, 73, 248, 17, 0, 220, 255, 207, 255, 157, 0, 237, 255, 69, 248, 21, 0, 218, 255, 208, 255, 149, 0, 235, 255, 80, 248, 20, 0, 220, 255, 207, 255, 176, 0, 4, 0, 75, 248, 21, 0, 218, 255, 204, 255, 164, 0, 7, 0, 63, 248, 20, 0, 221, 255, 206, 255, 147, 0, 2, 0, 69, 248, 18, 0, 223, 255, 206, 255, 158, 0, 251, 255, 54, 248, 21, 0, 222, 255, 206, 255, 164, 0, 251, 255, 66, 248, 23, 0, 223, 255, 205, 255, 156, 0, 4, 0, 57, 248, 20, 0, 222, 255, 208, 255, 162, 0, 10, 0, 79, 248, 19, 0, 217, 255, 205, 255, 162, 0, 3, 0, 41, 248, 21, 0, 218, 255, 205, 255, 163, 0, 17, 0, 61, 248, 20, 0, 222, 255, 206, 255, 189, 0, 11, 0, 62, 248, 22, 0, 222, 255, 207, 255, 168, 0, 253, 255, 50, 248, 18, 0, 223, 255, 206, 255, 172, 0, 13, 0, 66, 248, 19, 0, 225, 255, 208, 255, 159, 0, 9, 0, 70, 248, 22, 0, 217, 255, 204, 255, 167, 0, 248, 255, 75, 248, 21, 0, 220, 255, 207, 255, 159, 0, 9, 0, 70, 248, 18, 0, 222, 255, 207, 255, 158, 0, 9, 0, 55, 248, 20, 0, 222, 255, 206, 255, 161, 0, 6, 0, 54, 248, 21, 0, 220, 255, 209, 255, 151, 0, 21, 0, 73, 248, 22, 0, 218, 255, 208, 255, 158, 0, 248, 255, 70, 248, 20, 0, 223, 255, 208, 255, 165, 0, 238, 255, 56, 248, 18, 0, 225, 255, 205, 255, 149, 0, 23, 0, 52, 248, 17, 0, 222, 255, 206, 255, 159, 0, 4, 0, 68, 248, 20, 0, 224, 255, 207, 255, 183, 0, 243, 255, 63, 248, 22, 0, 220, 255, 207, 255, 172, 0, 12, 0, 59, 248, 21, 0, 215, 255, 207, 255, 163, 0, 4, 0, 78, 248, 20, 0, 220, 255, 205, 255, 159, 0, 253, 255, 58, 248, 22, 0, 220, 255, 206, 255, 172, 0, 249, 255, 59, 248, 23, 0, 221, 255, 208, 255, 186, 0, 254, 255, 59, 248, 20, 0, 225, 255, 208, 255, 159, 0, 253, 255, 64, 248, 20, 0, 222, 255, 206, 255, 138, 0, 252, 255, 63, 248, 20, 0, 222, 255, 207, 255, 166, 0, 9, 0, 76, 248, 20, 0, 221, 255, 209, 255, 160, 0, 1, 0, 69, 248, 17, 0, 226, 255, 207, 255, 163, 0, 13, 0, 50, 248, 18, 0, 222, 255, 205, 255, 168, 0, 0, 0, 72, 248, 19, 0, 219, 255, 206, 255, 158, 0, 19, 0, 68, 248, 19, 0, 221, 255, 205, 255, 164, 0, 18, 0, 61, 248, 18, 0, 219, 255, 205, 255, 163, 0, 6, 0, 63, 248, 18, 0, 219, 255, 202, 255, 160, 0, 11, 0, 66, 248, 21, 0, 217, 255, 205, 255, 185, 0, 9, 0, 58, 248, 21, 0, 219, 255, 205, 255, 170, 0, 238, 255, 57, 248, 20, 0, 219, 255, 202, 255, 166, 0, 4, 0, 57, 248, 20, 0, 218, 255, 205, 255, 193, 0, 247, 255, 47, 248, 19, 0, 221, 255, 207, 255, 155, 0, 9, 0, 63, 248, 21, 0, 223, 255, 205, 255, 172, 0, 0, 0, 41, 248, 18, 0, 220, 255, 203, 255, 176, 0, 249, 255, 66, 248, 22, 0, 224, 255, 207, 255, 166, 0, 11, 0, 52, 248, 21, 0, 220, 255, 205, 255, 183, 0, 3, 0, 65, 248, 19, 0, 227, 255, 204, 255, 165, 0, 234, 255, 70, 248, 19, 0, 224, 255, 205, 255, 187, 0, 4, 0, 45, 248, 20, 0, 223, 255, 208, 255, 165, 0, 244, 255, 57, 248, 17, 0, 226, 255, 209, 255, 173, 0, 229, 255, 63, 248, 21, 0, 217, 255, 207, 255, 160, 0, 7, 0, 66, 248, 22, 0, 219, 255, 208, 255, 158, 0, 245, 255, 57, 248, 21, 0, 221, 255, 206, 255, 170, 0, 255, 255, 46, 248, 19, 0, 224, 255, 204, 255, 159, 0, 8, 0, 66, 248, 21, 0, 223, 255, 206, 255, 177, 0, 255, 255, 57, 248, 21, 0, 220, 255, 204, 255, 160, 0, 11, 0, 52, 248, 20, 0, 218, 255, 205, 255, 179, 0, 254, 255, 63, 248, 21, 0, 224, 255, 206, 255, 163, 0, 6, 0, 56, 248, 20, 0, 220, 255, 206, 255, 157, 0, 13, 0, 72, 248, 21, 0, 221, 255, 204, 255, 167, 0, 26, 0, 83, 248, 19, 0, 222, 255, 207, 255, 160, 0, 5, 0, 63, 248, 21, 0, 217, 255, 203, 255, 179, 0, 1, 0, 67, 248, 22, 0, 220, 255, 204, 255, 194, 0, 252, 255, 65, 248, 23, 0, 222, 255, 206, 255, 169, 0, 11, 0, 62, 248, 21, 0, 224, 255, 204, 255, 163, 0, 3, 0, 55, 248, 19, 0, 226, 255, 204, 255, 171, 0, 251, 255, 52, 248, 21, 0, 220, 255, 204, 255, 152, 0, 252, 255, 63, 248, 21, 0, 216, 255, 204, 255, 177, 0, 8, 0, 60, 248, 19, 0, 220, 255, 207, 255, 179, 0, 5, 0, 56, 248, 21, 0, 221, 255, 207, 255, 190, 0, 248, 255, 60, 248, 23, 0, 220, 255, 206, 255, 163, 0, 233, 255, 60, 248, 22, 0, 219, 255, 204, 255, 157, 0, 11, 0, 69, 248, 21, 0, 213, 255, 202, 255, 179, 0, 17, 0, 54, 248, 18, 0, 218, 255, 203, 255, 158, 0, 3, 0, 74, 248, 20, 0, 221, 255, 207, 255, 175, 0, 0, 0, 65, 248, 22, 0, 221, 255, 209, 255, 167, 0, 4, 0, 55, 248, 20, 0, 220, 255, 208, 255, 160, 0, 2, 0, 73, 248, 21, 0, 218, 255, 206, 255, 166, 0, 248, 255, 64, 248, 19, 0, 218, 255, 206, 255, 171, 0, 10, 0, 54, 248, 20, 0, 220, 255, 205, 255, 199, 0, 228, 255, 57, 248, 20, 0, 218, 255, 204, 255, 171, 0, 3, 0, 59, 248, 20, 0, 220, 255, 202, 255, 165, 0, 5, 0, 70, 248, 22, 0, 221, 255, 204, 255, 175, 0, 11, 0, 70, 248, 20, 0, 223, 255, 206, 255, 167, 0, 6, 0, 66, 248, 19, 0, 220, 255, 206, 255, 151, 0, 250, 255, 53, 248, 19, 0, 224, 255, 209, 255, 160, 0, 4, 0, 69, 248, 21, 0, 219, 255, 208, 255, 156, 0, 250, 255, 65, 248, 18, 0, 226, 255, 209, 255, 182, 0, 4, 0, 81, 248, 23, 0, 221, 255, 207, 255, 158, 0, 28, 0, 57, 248, 22, 0, 219, 255, 204, 255, 168, 0, 12, 0, 67, 248, 20, 0, 221, 255, 206, 255, 176, 0, 1, 0, 59, 248, 21, 0, 220, 255, 209, 255, 169, 0, 252, 255, 73, 248, 21, 0, 219, 255, 205, 255, 174, 0, 8, 0, 67, 248, 18, 0, 220, 255, 205, 255, 164, 0, 253, 255, 79, 248, 19, 0, 224, 255, 208, 255, 184, 0, 15, 0, 51, 248, 18, 0, 219, 255, 206, 255, 172, 0, 5, 0, 60, 248, 19, 0, 218, 255, 207, 255, 163, 0, 0, 0, 73, 248, 19, 0, 221, 255, 210, 255, 154, 0, 251, 255, 49, 248, 19, 0, 222, 255, 209, 255, 169, 0, 245, 255, 51, 248, 21, 0, 224, 255, 207, 255, 178, 0, 2, 0, 82, 248, 22, 0, 216, 255, 203, 255, 165, 0, 0, 0, 45, 248, 18, 0, 218, 255, 207, 255, 179, 0, 251, 255, 61, 248, 21, 0, 215, 255, 205, 255, 168, 0, 9, 0, 51, 248, 16, 0, 222, 255, 207, 255, 170, 0, 7, 0, 57, 248, 19, 0, 220, 255, 206, 255, 184, 0, 238, 255, 73, 248, 22, 0, 221, 255, 207, 255, 185, 0, 3, 0, 61, 248, 20, 0, 218, 255, 205, 255, 160, 0, 254, 255, 69, 248, 22, 0, 220, 255, 205, 255, 176, 0, 0, 0, 61, 248, 19, 0, 221, 255, 204, 255, 177, 0, 244, 255, 63, 248, 19, 0, 217, 255, 204, 255, 165, 0, 23, 0, 60, 248, 18, 0, 225, 255, 210, 255, 158, 0, 1, 0, 58, 248, 18, 0, 220, 255, 208, 255, 167, 0, 246, 255, 60, 248, 20, 0, 220, 255, 208, 255, 157, 0, 240, 255, 63, 248, 21, 0, 221, 255, 206, 255, 163, 0, 253, 255, 61, 248, 18, 0, 223, 255, 207, 255, 170, 0, 239, 255, 52, 248, 21, 0, 219, 255, 205, 255, 179, 0, 255, 255, 63, 248, 23, 0, 218, 255, 208, 255, 166, 0, 246, 255, 61, 248, 22, 0, 218, 255, 206, 255, 171, 0, 19, 0, 49, 248, 21, 0, 219, 255, 204, 255, 178, 0, 5, 0, 54, 248, 21, 0, 218, 255, 203, 255, 169, 0, 250, 255, 60, 248, 19, 0, 226, 255, 207, 255, 183, 0, 252, 255, 78, 248, 20, 0, 222, 255, 203, 255, 152, 0, 253, 255, 56, 248, 22, 0, 222, 255, 204, 255, 188, 0, 8, 0, 64, 248, 21, 0, 222, 255, 201, 255, 181, 0, 2, 0, 62, 248, 19, 0, 223, 255, 204, 255, 163, 0, 252, 255, 66, 248, 20, 0, 223, 255, 205, 255, 177, 0, 232, 255, 69, 248, 19, 0, 224, 255, 206, 255, 168, 0, 13, 0, 70, 248, 20, 0, 224, 255, 207, 255, 167, 0, 248, 255, 72, 248, 24, 0, 223, 255, 203, 255, 167, 0, 8, 0, 63, 248, 20, 0, 223, 255, 205, 255, 156, 0, 1, 0, 65, 248, 22, 0, 221, 255, 203, 255, 158, 0, 10, 0, 67, 248, 21, 0, 222, 255, 206, 255, 159, 0, 248, 255, 77, 248, 19, 0, 222, 255, 206, 255, 187, 0, 2, 0, 71, 248, 18, 0, 226, 255, 206, 255, 157, 0, 1, 0, 65, 248, 16, 0, 226, 255, 208, 255, 185, 0, 255, 255, 66, 248, 18, 0, 228, 255, 206, 255, 177, 0, 8, 0, 67, 248, 22, 0, 219, 255, 205, 255, 169, 0, 14, 0, 61, 248, 22, 0, 221, 255, 206, 255, 168, 0, 5, 0, 51, 248, 22, 0, 224, 255, 205, 255, 165, 0, 254, 255, 54, 248, 22, 0, 217, 255, 205, 255, 167, 0, 1, 0, 59, 248, 19, 0, 222, 255, 206, 255, 164, 0, 248, 255, 47, 248, 20, 0, 223, 255, 207, 255, 162, 0, 9, 0, 64, 248, 20, 0, 219, 255, 203, 255, 164, 0, 233, 255, 61, 248, 20, 0, 221, 255, 204, 255, 167, 0, 10, 0, 66, 248, 20, 0, 219, 255, 205, 255, 164, 0, 4, 0, 66, 248, 19, 0, 220, 255, 207, 255, 184, 0, 13, 0, 67, 248, 19, 0, 218, 255, 206, 255, 170, 0, 247, 255, 59, 248, 19, 0, 220, 255, 205, 255, 172, 0, 1, 0, 71, 248, 21, 0, 220, 255, 207, 255, 152, 0, 11, 0, 63, 248, 21, 0, 220, 255, 208, 255, 161, 0, 250, 255, 64, 248, 20, 0, 218, 255, 205, 255, 179, 0, 11, 0, 75, 248, 23, 0, 216, 255, 204, 255, 168, 0, 7, 0, 59, 248, 20, 0, 223, 255, 204, 255, 186, 0, 12, 0, 39, 248, 17, 0, 220, 255, 204, 255, 176, 0, 4, 0, 67, 248, 20, 0, 222, 255, 207, 255, 167, 0, 5, 0, 71, 248, 22, 0, 222, 255, 204, 255, 175, 0, 249, 255, 67, 248, 22, 0, 222, 255, 204, 255, 171, 0, 11, 0, 67, 248, 21, 0, 221, 255, 204, 255, 157, 0, 16, 0, 75, 248, 21, 0, 220, 255, 206, 255, 158, 0, 252, 255, 53, 248, 23, 0, 221, 255, 206, 255, 175, 0, 248, 255, 79, 248, 22, 0, 221, 255, 206, 255, 172, 0, 24, 0, 66, 248, 20, 0, 222, 255, 206, 255, 161, 0, 4, 0, 58, 248, 19, 0, 220, 255, 207, 255, 162, 0, 249, 255, 59, 248, 21, 0, 220, 255, 205, 255, 177, 0, 3, 0, 56, 248, 22, 0, 218, 255, 204, 255, 182, 0, 4, 0, 57, 248, 22, 0, 217, 255, 207, 255, 168, 0, 250, 255, 58, 248, 17, 0, 221, 255, 206, 255, 152, 0, 9, 0, 67, 248, 15, 0, 221, 255, 206, 255, 179, 0, 255, 255, 53, 248, 15, 0, 226, 255, 205, 255, 187, 0, 19, 0, 63, 248, 17, 0, 225, 255, 205, 255, 160, 0, 245, 255, 69, 248, 20, 0, 222, 255, 208, 255, 176, 0, 253, 255, 53, 248, 17, 0, 223, 255, 205, 255, 169, 0, 4, 0, 64, 248, 19, 0, 221, 255, 206, 255, 168, 0, 255, 255, 65, 248, 17, 0, 226, 255, 207, 255, 179, 0, 7, 0, 42, 248, 21, 0, 220, 255, 206, 255, 160, 0, 20, 0, 52, 248, 22, 0, 218, 255, 205, 255, 129, 0, 0, 0, 60, 248, 23, 0, 217, 255, 205, 255, 172, 0, 8, 0, 69, 248, 23, 0, 218, 255, 206, 255, 169, 0, 252, 255, 80, 248, 21, 0, 222, 255, 205, 255, 165, 0, 2, 0, 70, 248, 18, 0, 222, 255, 208, 255, 160, 0, 22, 0, 60, 248, 20, 0, 218, 255, 204, 255, 166, 0, 12, 0, 61, 248, 22, 0, 220, 255, 204, 255, 159, 0, 246, 255, 61, 248, 19, 0, 219, 255, 204, 255, 170, 0, 253, 255, 58, 248, 19, 0, 221, 255, 205, 255, 178, 0, 249, 255, 71, 248, 21, 0, 225, 255, 204, 255, 184, 0, 246, 255, 52, 248, 20, 0, 220, 255, 204, 255, 177, 0, 28, 0, 59, 248, 20, 0, 223, 255, 209, 255, 164, 0, 250, 255, 76, 248, 21, 0, 223, 255, 208, 255, 163, 0, 3, 0, 74, 248, 22, 0, 223, 255, 208, 255, 164, 0, 9, 0, 61, 248, 24, 0, 220, 255, 208, 255, 176, 0, 255, 255, 53, 248, 23, 0, 220, 255, 205, 255, 180, 0, 254, 255, 53, 248, 21, 0, 219, 255, 204, 255, 174, 0, 251, 255, 62, 248, 20, 0, 219, 255, 204, 255, 176, 0, 254, 255, 57, 248, 22, 0, 216, 255, 204, 255, 174, 0, 14, 0, 60, 248, 20, 0, 221, 255, 209, 255, 166, 0, 7, 0, 50, 248, 22, 0, 222, 255, 206, 255, 173, 0, 253, 255, 60, 248, 23, 0, 221, 255, 207, 255, 165, 0, 253, 255, 68, 248, 20, 0, 218, 255, 205, 255, 146, 0, 248, 255, 65, 248, 21, 0, 218, 255, 205, 255, 184, 0, 246, 255, 65, 248, 21, 0, 218, 255, 207, 255, 179, 0, 11, 0, 83, 248, 19, 0, 220, 255, 207, 255, 159, 0, 243, 255, 66, 248, 19, 0, 219, 255, 205, 255, 158, 0, 243, 255, 57, 248, 18, 0, 222, 255, 205, 255, 183, 0, 10, 0, 47, 248, 21, 0, 216, 255, 205, 255, 175, 0, 255, 255, 78, 248, 20, 0, 219, 255, 206, 255, 162, 0, 237, 255, 67, 248, 22, 0, 219, 255, 208, 255, 166, 0, 243, 255, 74, 248, 19, 0, 216, 255, 206, 255, 181, 0, 251, 255, 59, 248, 19, 0, 221, 255, 206, 255, 162, 0, 249, 255, 57, 248, 20, 0, 219, 255, 205, 255, 187, 0, 15, 0, 65, 248, 23, 0, 223, 255, 209, 255, 187, 0, 240, 255, 70, 248, 21, 0, 220, 255, 204, 255, 173, 0, 250, 255, 54, 248, 20, 0, 220, 255, 204, 255, 165, 0, 9, 0, 68, 248, 19, 0, 225, 255, 205, 255, 179, 0, 249, 255, 59, 248, 23, 0, 220, 255, 201, 255, 142, 0, 2, 0, 64, 248, 21, 0, 217, 255, 203, 255, 170, 0, 0, 0, 61, 248, 21, 0, 221, 255, 208, 255, 164, 0, 9, 0, 57, 248, 19, 0, 225, 255, 208, 255, 177, 0, 5, 0, 53, 248, 21, 0, 221, 255, 208, 255, 169, 0, 5, 0, 53, 248, 21, 0, 220, 255, 205, 255, 152, 0, 252, 255, 61, 248, 20, 0, 220, 255, 205, 255, 170, 0, 11, 0, 71, 248, 16, 0, 222, 255, 208, 255, 157, 0, 249, 255, 69, 248, 18, 0, 219, 255, 206, 255, 153, 0, 6, 0, 61, 248, 19, 0, 220, 255, 205, 255, 146, 0, 12, 0, 65, 248, 20, 0, 222, 255, 207, 255, 153, 0, 12, 0, 65, 248, 21, 0, 219, 255, 209, 255, 168, 0, 245, 255, 57, 248, 20, 0, 223, 255, 207, 255, 165, 0, 0, 0, 63, 248, 19, 0, 226, 255, 207, 255, 162, 0, 240, 255, 86, 248, 18, 0, 226, 255, 207, 255, 171, 0, 246, 255, 84, 248, 21, 0, 227, 255, 208, 255, 151, 0, 3, 0, 65, 248, 21, 0, 220, 255, 210, 255, 169, 0, 252, 255, 65, 248, 22, 0, 221, 255, 208, 255, 165, 0, 2, 0, 55, 248, 23, 0, 219, 255, 207, 255, 173, 0, 15, 0, 66, 248, 21, 0, 219, 255, 206, 255, 181, 0, 246, 255, 70, 248, 22, 0, 222, 255, 206, 255, 152, 0, 7, 0, 78, 248, 21, 0, 221, 255, 204, 255, 162, 0, 1, 0, 63, 248, 18, 0, 218, 255, 202, 255, 150, 0, 243, 255, 62, 248, 18, 0, 221, 255, 204, 255, 152, 0, 5, 0, 79, 248, 20, 0, 224, 255, 205, 255, 165, 0, 6, 0, 65, 248, 21, 0, 217, 255, 204, 255, 170, 0, 11, 0, 74, 248, 20, 0, 219, 255, 203, 255, 156, 0, 11, 0, 61, 248, 21, 0, 221, 255, 203, 255, 174, 0, 20, 0, 77, 248, 18, 0, 220, 255, 206, 255, 164, 0, 248, 255, 70, 248, 17, 0, 228, 255, 207, 255, 180, 0, 0, 0, 65, 248, 18, 0, 225, 255, 206, 255, 177, 0, 21, 0, 63, 248, 21, 0, 220, 255, 204, 255, 185, 0, 6, 0, 64, 248, 21, 0, 221, 255, 206, 255, 169, 0, 7, 0, 78, 248, 22, 0, 219, 255, 208, 255, 162, 0, 246, 255, 69, 248, 21, 0, 219, 255, 206, 255, 168, 0, 4, 0, 66, 248, 19, 0, 222, 255, 207, 255, 173, 0, 243, 255, 49, 248, 19, 0, 225, 255, 207, 255, 175, 0, 254, 255, 64, 248, 20, 0, 225, 255, 207, 255, 154, 0, 252, 255, 50, 248, 21, 0, 219, 255, 205, 255, 158, 0, 230, 255, 59, 248, 20, 0, 218, 255, 203, 255, 165, 0, 8, 0, 65, 248, 19, 0, 221, 255, 205, 255, 178, 0, 12, 0, 52, 248, 22, 0, 217, 255, 206, 255, 163, 0, 15, 0, 83, 248, 21, 0, 220, 255, 205, 255, 167, 0, 249, 255, 62, 248, 21, 0, 223, 255, 205, 255, 160, 0, 5, 0, 52, 248, 24, 0, 216, 255, 204, 255, 170, 0, 0, 0, 55, 248, 21, 0, 222, 255, 202, 255, 148, 0, 1, 0, 64, 248, 18, 0, 224, 255, 206, 255, 168, 0, 252, 255, 51, 248, 18, 0, 223, 255, 208, 255, 179, 0, 242, 255, 55, 248, 19, 0, 221, 255, 205, 255, 169, 0, 3, 0, 57, 248, 22, 0, 221, 255, 205, 255, 171, 0, 2, 0, 73, 248, 21, 0, 221, 255, 208, 255, 177, 0, 3, 0, 64, 248, 18, 0, 221, 255, 206, 255, 159, 0, 252, 255, 83, 248, 22, 0, 218, 255, 204, 255, 165, 0, 14, 0, 76, 248, 20, 0, 222, 255, 209, 255, 171, 0, 237, 255, 69, 248, 18, 0, 223, 255, 207, 255, 172, 0, 249, 255, 64, 248, 20, 0, 222, 255, 204, 255, 160, 0, 4, 0, 74, 248, 19, 0, 220, 255, 204, 255, 162, 0, 242, 255, 80, 248, 21, 0, 220, 255, 206, 255, 168, 0, 238, 255, 68, 248, 18, 0, 221, 255, 207, 255, 175, 0, 12, 0, 59, 248, 21, 0, 222, 255, 205, 255, 172, 0, 4, 0, 66, 248, 22, 0, 223, 255, 205, 255, 186, 0, 5, 0, 63, 248, 23, 0, 219, 255, 205, 255, 162, 0, 5, 0, 76, 248, 22, 0, 219, 255, 207, 255, 170, 0, 5, 0, 70, 248, 22, 0, 218, 255, 206, 255, 178, 0, 13, 0, 70, 248, 21, 0, 220, 255, 201, 255, 163, 0, 12, 0, 57, 248, 19, 0, 225, 255, 205, 255, 155, 0, 254, 255, 65, 248, 19, 0, 223, 255, 207, 255, 188, 0, 246, 255, 57, 248, 18, 0, 222, 255, 205, 255, 158, 0, 17, 0, 44, 248, 18, 0, 220, 255, 207, 255, 157, 0, 6, 0, 65, 248, 19, 0, 222, 255, 206, 255, 161, 0, 246, 255, 55, 248, 23, 0, 215, 255, 206, 255, 173, 0, 26, 0, 63, 248, 23, 0, 218, 255, 204, 255, 160, 0, 3, 0, 78, 248, 20, 0, 217, 255, 206, 255, 182, 0, 7, 0, 63, 248, 21, 0, 217, 255, 204, 255, 161, 0, 1, 0, 74, 248, 23, 0, 223, 255, 204, 255, 182, 0, 3, 0, 71, 248, 21, 0, 222, 255, 207, 255, 167, 0, 245, 255, 68, 248, 21, 0, 219, 255, 205, 255, 165, 0, 250, 255, 70, 248, 22, 0, 217, 255, 204, 255, 171, 0, 9, 0, 67, 248, 19, 0, 221, 255, 205, 255, 172, 0, 5, 0, 68, 248, 19, 0, 224, 255, 208, 255, 167, 0, 253, 255, 50, 248, 21, 0, 226, 255, 205, 255, 184, 0, 7, 0, 66, 248, 22, 0, 218, 255, 205, 255, 167, 0, 14, 0, 62, 248, 20, 0, 219, 255, 207, 255, 164, 0, 8, 0, 75, 248, 18, 0, 224, 255, 206, 255, 165, 0, 1, 0, 71, 248, 20, 0, 221, 255, 205, 255, 171, 0, 6, 0, 67, 248, 18, 0, 223, 255, 209, 255, 168, 0, 2, 0, 81, 248, 22, 0, 219, 255, 207, 255, 175, 0, 1, 0, 66, 248, 22, 0, 222, 255, 205, 255, 164, 0, 3, 0, 50, 248, 18, 0, 226, 255, 207, 255, 156, 0, 252, 255, 69, 248, 21, 0, 225, 255, 210, 255, 162, 0, 2, 0, 56, 248, 19, 0, 227, 255, 209, 255, 161, 0, 246, 255, 73, 248, 18, 0, 222, 255, 204, 255, 186, 0, 5, 0, 63, 248, 20, 0, 221, 255, 206, 255, 170, 0, 12, 0, 51, 248, 19, 0, 220, 255, 206, 255, 174, 0, 5, 0, 67, 248, 21, 0, 218, 255, 206, 255, 176, 0, 254, 255, 41, 248, 20, 0, 220, 255, 206, 255, 157, 0, 252, 255, 63, 248, 21, 0, 222, 255, 203, 255, 157, 0, 254, 255, 44, 248, 18, 0, 223, 255, 204, 255, 167, 0, 249, 255, 69, 248, 21, 0, 223, 255, 204, 255, 169, 0, 247, 255, 62, 248, 21, 0, 222, 255, 205, 255, 177, 0, 0, 0, 73, 248, 22, 0, 220, 255, 205, 255, 175, 0, 3, 0, 62, 248, 21, 0, 220, 255, 209, 255, 157, 0, 254, 255, 61, 248, 20, 0, 225, 255, 209, 255, 176, 0, 248, 255, 65, 248, 19, 0, 224, 255, 206, 255, 164, 0, 246, 255, 57, 248, 19, 0, 219, 255, 203, 255, 170, 0, 0, 0, 68, 248, 20, 0, 218, 255, 205, 255, 158, 0, 16, 0, 58, 248, 19, 0, 221, 255, 206, 255, 159, 0, 9, 0, 68, 248, 21, 0, 217, 255, 205, 255, 163, 0, 253, 255, 79, 248, 19, 0, 218, 255, 205, 255, 161, 0, 244, 255, 63, 248, 23, 0, 224, 255, 206, 255, 181, 0, 7, 0, 51, 248, 20, 0, 222, 255, 205, 255, 171, 0, 2, 0, 64, 248, 20, 0, 222, 255, 204, 255, 162, 0, 247, 255, 57, 248, 21, 0, 222, 255, 205, 255, 163, 0, 254, 255, 59, 248, 21, 0, 225, 255, 207, 255, 174, 0, 252, 255, 72, 248, 22, 0, 219, 255, 206, 255, 187, 0, 249, 255, 60, 248, 21, 0, 218, 255, 207, 255, 165, 0, 8, 0, 52, 248, 20, 0, 222, 255, 206, 255, 177, 0, 12, 0, 73, 248, 22, 0, 224, 255, 205, 255, 170, 0, 254, 255, 47, 248, 23, 0, 215, 255, 204, 255, 169, 0, 6, 0, 68, 248, 21, 0, 220, 255, 209, 255, 180, 0, 1, 0, 47, 248, 21, 0, 220, 255, 208, 255, 164, 0, 11, 0, 61, 248, 19, 0, 220, 255, 205, 255, 168, 0, 245, 255, 53, 248, 22, 0, 223, 255, 208, 255, 176, 0, 16, 0, 69, 248, 20, 0, 227, 255, 206, 255, 162, 0, 2, 0, 64, 248, 19, 0, 222, 255, 206, 255, 167, 0, 3, 0, 53, 248, 23, 0, 222, 255, 206, 255, 182, 0, 5, 0, 71, 248, 20, 0, 223, 255, 205, 255, 167, 0, 248, 255, 45, 248, 19, 0, 218, 255, 203, 255, 176, 0, 0, 0, 45, 248, 21, 0, 219, 255, 204, 255, 164, 0, 9, 0, 67, 248, 20, 0, 219, 255, 207, 255, 169, 0, 247, 255, 62, 248, 20, 0, 222, 255, 207, 255, 161, 0, 251, 255, 37, 248, 20, 0, 220, 255, 204, 255, 177, 0, 247, 255, 60, 248, 20, 0, 220, 255, 203, 255, 160, 0, 252, 255, 69, 248, 21, 0, 222, 255, 206, 255, 167, 0, 4, 0, 67, 248, 21, 0, 224, 255, 208, 255, 166, 0, 241, 255, 66, 248, 18, 0, 224, 255, 206, 255, 162, 0, 252, 255, 63, 248, 16, 0, 227, 255, 203, 255, 158, 0, 3, 0, 70, 248, 19, 0, 223, 255, 204, 255, 176, 0, 7, 0, 61, 248, 20, 0, 220, 255, 204, 255, 157, 0, 255, 255, 64, 248, 22, 0, 221, 255, 206, 255, 168, 0, 5, 0, 54, 248, 19, 0, 220, 255, 205, 255, 175, 0, 12, 0, 58, 248, 18, 0, 224, 255, 206, 255, 159, 0, 254, 255, 78, 248, 21, 0, 222, 255, 209, 255, 172, 0, 250, 255, 68, 248, 22, 0, 217, 255, 205, 255, 171, 0, 11, 0, 58, 248, 21, 0, 220, 255, 206, 255, 155, 0, 255, 255, 78, 248, 20, 0, 222, 255, 206, 255, 155, 0, 20, 0, 61, 248, 18, 0, 225, 255, 203, 255, 175, 0, 5, 0, 72, 248, 87, 176 };

            if (CommunicationEvent != null)
            {
                CommunicationEvent.Invoke(null, new ByteLevelCommunicationEvent { Bytes = rawPacket, Event = ByteLevelCommunicationEvent.CommEvent.NewBytes });
            }
        }

        public void InjectRawPacketGSR()
        {
            byte[] rawPacket = new byte[] { 58, 198, 0, 1, 115, 160, 26, 61, 140, 50, 140, 55, 140, 51, 140, 70, 140, 58, 140, 56, 140, 47, 140, 53, 140, 56, 140, 58, 140, 51, 140, 54, 140, 51, 140, 57, 140, 56, 140, 65, 140, 50, 140, 60, 140, 74, 140, 56, 140, 54, 140, 50, 140, 55, 140, 64, 140, 60, 140, 53, 140, 70, 140, 51, 140, 60, 140, 45, 140, 64, 140, 59, 140, 55, 140, 47, 140, 56, 140, 56, 140, 56, 140, 62, 140, 58, 140, 60, 140, 56, 140, 61, 140, 54, 140, 55, 140, 53, 140, 81, 140, 58, 140, 50, 140, 50, 140, 52, 140, 60, 140, 51, 140, 71, 140, 64, 140, 53, 140, 55, 140, 70, 140, 56, 140, 51, 140, 54, 140, 69, 140, 47, 140, 50, 140, 57, 140, 51, 140, 60, 140, 47, 140, 53, 140, 45, 140, 51, 140, 50, 140, 50, 140, 64, 140, 48, 140, 61, 140, 51, 140, 58, 140, 48, 140, 47, 140, 71, 140, 60, 140, 48, 140, 47, 140, 59, 140, 51, 140, 48, 140, 56, 140, 47, 140, 53, 140, 53, 140, 75, 140, 54, 140, 56, 140, 53, 140, 69, 140, 202, 120 };

            if (CommunicationEvent != null)
            {
                CommunicationEvent.Invoke(null, new ByteLevelCommunicationEvent { Bytes = rawPacket, Event = ByteLevelCommunicationEvent.CommEvent.NewBytes });
            }
        }

        public void InjectRawPacketGSRVerisensePulsePlus()
        {
            byte[] rawPacket = new byte[] { 58, 198, 0, 1, 226, 36, 28, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 5, 11, 144, 196, 227, 224 };
            if (CommunicationEvent != null)
            {
                CommunicationEvent.Invoke(null, new ByteLevelCommunicationEvent { Bytes = rawPacket, Event = ByteLevelCommunicationEvent.CommEvent.NewBytes });
            }
        }

        public void InjectRawPacketPPG()
        {
            byte[] rawPacket = new byte[] { 58, 210, 0, 4, 115, 160, 26, 
                59, 201, 158, 59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,
                59, 201, 158, 59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,
                59, 201, 158, 59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,
                59, 201, 158, 59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,59, 201, 158,
                193, 246 };

            if (CommunicationEvent != null)
            {
                CommunicationEvent.Invoke(null, new ByteLevelCommunicationEvent { Bytes = rawPacket, Event = ByteLevelCommunicationEvent.CommEvent.NewBytes });
            }
        }

        public void InjectRawPacket(int mtusize)
        {
            byte[] rawPacket = new byte[] { 58, 198, 0, 2, 180, 0, 22, 144, 255, 96, 255, 16, 240, 160, 255, 96, 255, 224, 239, 176, 255, 144, 255, 224, 239, 176, 255, 128, 255, 0, 240, 208, 255, 112, 255, 0, 240, 208, 255, 128, 255, 240, 239, 176, 255, 176, 255, 16, 240, 128, 255, 128, 255, 224, 239, 176, 255, 112, 255, 240, 239, 160, 255, 128, 255, 0, 240, 208, 255, 96, 255, 240, 239, 160, 255, 96, 255, 32, 240, 144, 255, 96, 255, 240, 239, 224, 255, 96, 255, 16, 240, 160, 255, 144, 255, 16, 240, 192, 255, 144, 255, 0, 240, 192, 255, 144, 255, 16, 240, 176, 255, 96, 255, 0, 240, 160, 255, 112, 255, 240, 239, 224, 255, 112, 255, 16, 240, 160, 255, 96, 255, 0, 240, 176, 255, 160, 255, 208, 239, 176, 255, 112, 255, 0, 240, 176, 255, 128, 255, 32, 240, 208, 255, 112, 255, 208, 239, 160, 255, 112, 255, 240, 239, 160, 255, 112, 255, 32, 240, 160, 255, 112, 255, 0, 240, 144, 255, 112, 255, 240, 239, 208, 255, 160, 255, 0, 240, 160, 255, 80, 255, 16, 240, 176, 255, 144, 255, 32, 240, 92, 241 };

            double numberofsplits = Math.Ceiling(((double)rawPacket.Length) / (double)mtusize);
            for (int i = 0; i < numberofsplits; i++)
            {
                int length = mtusize;
                if (i + 1 == numberofsplits)
                {
                    length = rawPacket.Length - (i * mtusize);
                }
                int startIndex = i * mtusize;
                int endIndex = startIndex + length - 1;
                Debug.WriteLine("Index for mtubytes : " + startIndex + " " + endIndex);
                byte[] rawSmallPacket = new byte[length];
                System.Array.Copy(rawPacket, startIndex, rawSmallPacket, 0, length);
                if (CommunicationEvent != null)
                {
                    CommunicationEvent.Invoke(null, new ByteLevelCommunicationEvent { Bytes = rawSmallPacket, Event = ByteLevelCommunicationEvent.CommEvent.NewBytes });
                }
            }
        }
    }
}
