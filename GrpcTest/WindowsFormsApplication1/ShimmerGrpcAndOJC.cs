// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: src/ShimmerGrpcAndOJC.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace com.shimmerresearch.grpc {

  /// <summary>Holder for reflection information generated from src/ShimmerGrpcAndOJC.proto</summary>
  public static partial class ShimmerGrpcAndOJCReflection {

    #region Descriptor
    /// <summary>File descriptor for src/ShimmerGrpcAndOJC.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ShimmerGrpcAndOJCReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtzcmMvU2hpbW1lckdycGNBbmRPSkMucHJvdG8SC3NoaW1tZXJHUlBDIkEK",
            "EEZpbGVCeXRlVHJhbnNmZXISDAoEbmFtZRgBIAEoCRIMCgRkYXRhGAIgASgM",
            "EhEKCWVuZG9mZmlsZRgDIAEoCCIfCg1Db21tYW5kU3RhdHVzEg4KBnN0YXR1",
            "cxgBIAEoCSIcCgxIZWxsb1JlcXVlc3QSDAoEbmFtZRgBIAEoCSIdCgpIZWxs",
            "b1JlcGx5Eg8KB21lc3NhZ2UYASABKAkiIQoOU2hpbW1lclJlcXVlc3QSDwoH",
            "YWRkcmVzcxgBIAEoCSIgCg1TdHJlYW1SZXF1ZXN0Eg8KB21lc3NhZ2UYASAB",
            "KAkijgUKDk9iamVjdENsdXN0ZXIyEgwKBG5hbWUYASABKAkSGAoQYmx1ZXRv",
            "b3RoQWRkcmVzcxgCIAEoCRJIChFjb21tdW5pY2F0aW9uVHlwZRgDIAEoDjIt",
            "LnNoaW1tZXJHUlBDLk9iamVjdENsdXN0ZXIyLkNvbW11bmljYXRpb25UeXBl",
            "EjkKB2RhdGFNYXAYBCADKAsyKC5zaGltbWVyR1JQQy5PYmplY3RDbHVzdGVy",
            "Mi5EYXRhTWFwRW50cnkSEgoKc3lzdGVtVGltZRgFIAEoAxIbChNjYWxpYnJh",
            "dGVkVGltZVN0YW1wGAYgASgBGogCCg5Gb3JtYXRDbHVzdGVyMhJMCglmb3Jt",
            "YXRNYXAYASADKAsyOS5zaGltbWVyR1JQQy5PYmplY3RDbHVzdGVyMi5Gb3Jt",
            "YXRDbHVzdGVyMi5Gb3JtYXRNYXBFbnRyeRo9CgxEYXRhQ2x1c3RlcjISDAoE",
            "dW5pdBgBIAEoCRIMCgRkYXRhGAIgASgBEhEKCWRhdGFBcnJheRgDIAMoARpp",
            "Cg5Gb3JtYXRNYXBFbnRyeRILCgNrZXkYASABKAkSRgoFdmFsdWUYAiABKAsy",
            "Ny5zaGltbWVyR1JQQy5PYmplY3RDbHVzdGVyMi5Gb3JtYXRDbHVzdGVyMi5E",
            "YXRhQ2x1c3RlcjI6AjgBGloKDERhdGFNYXBFbnRyeRILCgNrZXkYASABKAkS",
            "OQoFdmFsdWUYAiABKAsyKi5zaGltbWVyR1JQQy5PYmplY3RDbHVzdGVyMi5G",
            "b3JtYXRDbHVzdGVyMjoCOAEiNwoRQ29tbXVuaWNhdGlvblR5cGUSBgoCQlQQ",
            "ABIGCgJTRBABEhIKDlJhZGlvXzgwMl8xNV80EAIiHAoJU3RyaW5nTXNnEg8K",
            "B21lc3NhZ2UYASABKAkiJgoOU3RyaW5nQXJyYXlNc2cSFAoMbWVzc2FnZUFy",
            "cmF5GAEgAygJIhgKB0Jvb2xNc2cSDQoFc3RhdGUYASABKAgiGwoJRG91Ymxl",
            "TXNnEg4KBm51bWJlchgBIAEoASKIAQoQT3BlcmF0aW9uUmVxdWVzdBISCgpp",
            "c0ZpbmlzaGVkGAEgASgIEhEKCWlzU3VjY2VzcxgCIAEoCBIPCgdtZXNzYWdl",
            "GAMgASgJEhoKEnByb2dyZXNzUGVyY2VudGFnZRgEIAEoARIgChhwcm9ncmVz",
            "c1BlcmNlbnRhZ2VQYXJzZWQYBSABKAkiiQYKDFNoaW1tZXJzSW5mbxINCgVz",
            "dGF0ZRgBIAEoCBIPCgdtZXNzYWdlGAIgASgJEj0KCnNoaW1tZXJNYXAYAyAD",
            "KAsyKS5zaGltbWVyR1JQQy5TaGltbWVyc0luZm8uU2hpbW1lck1hcEVudHJ5",
            "Gr8ECgtTaGltbWVySW5mbxIMCgRuYW1lGAEgASgJEhAKCHVuaXF1ZUlkGAIg",
            "ASgJEhgKEGJsdWV0b290aEFkZHJlc3MYAyABKAkSEQoJdHJpYWxOYW1lGAQg",
            "ASgJEh8KF2JhdHRlcnlQZXJjZW50YWdlUGFyc2VkGAUgASgJEhkKEWJhdHRl",
            "cnlQZXJjZW50YWdlGAYgASgBEhwKFGNoYXJnaW5nU3RhdHVzUGFyc2VkGAcg",
            "ASgJEhUKDWRyaXZlQ2FwYWNpdHkYCCABKAMSFgoOZHJpdmVTcGFjZVVzZWQY",
            "CSABKAMSFgoOZHJpdmVTcGFjZUZyZWUYCiABKAMSGwoTZHJpdmVDYXBhY2l0",
            "eVBhcnNlZBgLIAEoCRIaChJpc1JlYWxUaW1lQ2xvY2tTZXQYDCABKAgSIQoZ",
            "bGFzdFJlYWRSdGNWYWx1ZU1pbGxpU2VjcxgNIAEoAxIeChZsYXN0UmVhZFJ0",
            "Y1ZhbHVlUGFyc2VkGA4gASgJEhcKD2h3VmVyc2lvblBhcnNlZBgPIAEoCRIb",
            "ChNleHBCcmRWZXJzaW9uUGFyc2VkGBAgASgJEhcKD2Z3VmVyc2lvblBhcnNl",
            "ZBgRIAEoCRIUCgxwYWlyZWREZXZpY2UYEiADKAkSEgoKY29uZmlnVGltZRgT",
            "IAEoAxIYChBjb25maWdUaW1lUGFyc2VkGBQgASgJEjMKDmllZWU4MDIxNTRJ",
            "bmZvGBUgASgLMhsuc2hpbW1lckdSUEMuSWVlZTgwMjE1NEluZm8aWAoPU2hp",
            "bW1lck1hcEVudHJ5EgsKA2tleRgBIAEoCRI0CgV2YWx1ZRgCIAEoCzIlLnNo",
            "aW1tZXJHUlBDLlNoaW1tZXJzSW5mby5TaGltbWVySW5mbzoCOAEiUwoOSWVl",
            "ZTgwMjE1NEluZm8SFAoMcmFkaW9DaGFubmVsGAEgASgFEhQKDHJhZGlvR3Jv",
            "dXBJZBgCIAEoBRIVCg1yYWRpb0RldmljZUlkGAMgASgFIqkCCglJbmZvU3Bh",
            "bnMSDQoFc3RhdGUYASABKAgSDwoHbWVzc2FnZRgCIAEoCRI0CgdzcGFuTWFw",
            "GAMgAygLMiMuc2hpbW1lckdSUEMuSW5mb1NwYW5zLlNwYW5NYXBFbnRyeRIz",
            "Cg5pZWVlODAyMTU0SW5mbxgEIAEoCzIbLnNoaW1tZXJHUlBDLkllZWU4MDIx",
            "NTRJbmZvGkAKCEluZm9TcGFuEhAKCHVuaXF1ZUlkGAEgASgJEg8KB3BvcnRC",
            "c2wYAiABKAkSEQoJcG9ydENvbW1zGAMgASgJGk8KDFNwYW5NYXBFbnRyeRIL",
            "CgNrZXkYASABKAkSLgoFdmFsdWUYAiABKAsyHy5zaGltbWVyR1JQQy5JbmZv",
            "U3BhbnMuSW5mb1NwYW46AjgBIvoCCg9FbXVsYXRlZERldmljZXMSDQoFc3Rh",
            "dGUYASABKAgSDwoHbWVzc2FnZRgCIAEoCRIWCg5pc0VtdWxhdG9yU2lkZRgD",
            "IAEoCBJQChJlbXVsYXRlZERldmljZXNNYXAYBCADKAsyNC5zaGltbWVyR1JQ",
            "Qy5FbXVsYXRlZERldmljZXMuRW11bGF0ZWREZXZpY2VzTWFwRW50cnkadQoO",
            "RW11bGF0ZWREZXZpY2USEAoIdW5pcXVlSWQYASABKAkSGQoRZGV2aWNlVHlw",
            "ZU9yZGluYWwYAiABKAUSHQoVaHdEZXZpY2VJbnRlcmZhY2VQYXRoGAMgAygJ",
            "EhcKD2lzRGV2aWNlRW5hYmxlZBgEIAEoCBpmChdFbXVsYXRlZERldmljZXNN",
            "YXBFbnRyeRILCgNrZXkYASABKAkSOgoFdmFsdWUYAiABKAsyKy5zaGltbWVy",
            "R1JQQy5FbXVsYXRlZERldmljZXMuRW11bGF0ZWREZXZpY2U6AjgBMusOCg1T",
            "aGltbWVyU2VydmVyEkAKCFNheUhlbGxvEhkuc2hpbW1lckdSUEMuSGVsbG9S",
            "ZXF1ZXN0Ghcuc2hpbW1lckdSUEMuSGVsbG9SZXBseSIAEkwKDUdldERhdGFT",
            "dHJlYW0SGi5zaGltbWVyR1JQQy5TdHJlYW1SZXF1ZXN0Ghsuc2hpbW1lckdS",
            "UEMuT2JqZWN0Q2x1c3RlcjIiADABEkoKDlNlbmREYXRhU3RyZWFtEhsuc2hp",
            "bW1lckdSUEMuT2JqZWN0Q2x1c3RlcjIaFy5zaGltbWVyR1JQQy5IZWxsb1Jl",
            "cGx5IgAoARJMCg5TZW5kRmlsZVN0cmVhbRIdLnNoaW1tZXJHUlBDLkZpbGVC",
            "eXRlVHJhbnNmZXIaFy5zaGltbWVyR1JQQy5IZWxsb1JlcGx5IgAoARJLCg5D",
            "b25uZWN0U2hpbW1lchIbLnNoaW1tZXJHUlBDLlNoaW1tZXJSZXF1ZXN0Ghou",
            "c2hpbW1lckdSUEMuQ29tbWFuZFN0YXR1cyIAEk4KEURpc2Nvbm5lY3RTaGlt",
            "bWVyEhsuc2hpbW1lckdSUEMuU2hpbW1lclJlcXVlc3QaGi5zaGltbWVyR1JQ",
            "Qy5Db21tYW5kU3RhdHVzIgASSwoOU3RhcnRTdHJlYW1pbmcSGy5zaGltbWVy",
            "R1JQQy5TaGltbWVyUmVxdWVzdBoaLnNoaW1tZXJHUlBDLkNvbW1hbmRTdGF0",
            "dXMiABJKCg1TdG9wU3RyZWFtaW5nEhsuc2hpbW1lckdSUEMuU2hpbW1lclJl",
            "cXVlc3QaGi5zaGltbWVyR1JQQy5Db21tYW5kU3RhdHVzIgASTQoQQ2xvc2VB",
            "cHBsaWNhdGlvbhIbLnNoaW1tZXJHUlBDLlNoaW1tZXJSZXF1ZXN0Ghouc2hp",
            "bW1lckdSUEMuQ29tbWFuZFN0YXR1cyIAElAKFVNldFdvcmtzcGFjZURpcmVj",
            "dG9yeRIWLnNoaW1tZXJHUlBDLlN0cmluZ01zZxodLnNoaW1tZXJHUlBDLk9w",
            "ZXJhdGlvblJlcXVlc3QiABJJChVHZXRXb3Jrc3BhY2VEaXJlY3RvcnkSFi5z",
            "aGltbWVyR1JQQy5TdHJpbmdNc2caFi5zaGltbWVyR1JQQy5TdHJpbmdNc2ci",
            "ABJLChRHZXREb2NrZWRTaGltbWVySW5mbxIWLnNoaW1tZXJHUlBDLlN0cmlu",
            "Z01zZxoZLnNoaW1tZXJHUlBDLlNoaW1tZXJzSW5mbyIAEkkKFUdldE1hZGdl",
            "d2lja0JldGFWYWx1ZRIWLnNoaW1tZXJHUlBDLlN0cmluZ01zZxoWLnNoaW1t",
            "ZXJHUlBDLkRvdWJsZU1zZyIAEkwKDFBhaXJTaGltbWVycxIbLnNoaW1tZXJH",
            "UlBDLlN0cmluZ0FycmF5TXNnGh0uc2hpbW1lckdSUEMuT3BlcmF0aW9uUmVx",
            "dWVzdCIAEk8KFEdldE9wZXJhdGlvblByb2dyZXNzEhYuc2hpbW1lckdSUEMu",
            "U3RyaW5nTXNnGh0uc2hpbW1lckdSUEMuT3BlcmF0aW9uUmVxdWVzdCIAElgK",
            "GEltcG9ydFNkRGF0YUZyb21TaGltbWVycxIbLnNoaW1tZXJHUlBDLlN0cmlu",
            "Z0FycmF5TXNnGh0uc2hpbW1lckdSUEMuT3BlcmF0aW9uUmVxdWVzdCIAEk4K",
            "E1BhcnNlU2REYXRhRnJvbVBhdGgSFi5zaGltbWVyR1JQQy5TdHJpbmdNc2ca",
            "HS5zaGltbWVyR1JQQy5PcGVyYXRpb25SZXF1ZXN0IgASUQoRU2NhblNkRGF0",
            "YUFuZENvcHkSGy5zaGltbWVyR1JQQy5TdHJpbmdBcnJheU1zZxodLnNoaW1t",
            "ZXJHUlBDLk9wZXJhdGlvblJlcXVlc3QiABJPCg9DbGVhclNkQ2FyZERhdGES",
            "Gy5zaGltbWVyR1JQQy5TdHJpbmdBcnJheU1zZxodLnNoaW1tZXJHUlBDLk9w",
            "ZXJhdGlvblJlcXVlc3QiABJYChhEb2NrQWNjZXNzU2xvdFdpdGhTZENhcmQS",
            "Gy5zaGltbWVyR1JQQy5TdHJpbmdBcnJheU1zZxodLnNoaW1tZXJHUlBDLk9w",
            "ZXJhdGlvblJlcXVlc3QiABJUChREb2NrUmVzdG9yZUF1dG9UYXNrcxIbLnNo",
            "aW1tZXJHUlBDLlN0cmluZ0FycmF5TXNnGh0uc2hpbW1lckdSUEMuT3BlcmF0",
            "aW9uUmVxdWVzdCIAEkAKDEdldEluZm9TcGFucxIWLnNoaW1tZXJHUlBDLlN0",
            "cmluZ01zZxoWLnNoaW1tZXJHUlBDLkluZm9TcGFucyIAEkkKEkdldEluZm9B",
            "bGxTaGltbWVycxIWLnNoaW1tZXJHUlBDLlN0cmluZ01zZxoZLnNoaW1tZXJH",
            "UlBDLlNoaW1tZXJzSW5mbyIAEkwKEkdldEVtdWxhdGVkRGV2aWNlcxIWLnNo",
            "aW1tZXJHUlBDLlN0cmluZ01zZxocLnNoaW1tZXJHUlBDLkVtdWxhdGVkRGV2",
            "aWNlcyIAQkIKGGNvbS5zaGltbWVycmVzZWFyY2guZ3JwY0ILU2hpbW1lckdS",
            "UEOqAhhjb20uc2hpbW1lcnJlc2VhcmNoLmdycGNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::com.shimmerresearch.grpc.FileByteTransfer), global::com.shimmerresearch.grpc.FileByteTransfer.Parser, new[]{ "Name", "Data", "Endoffile" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.shimmerresearch.grpc.CommandStatus), global::com.shimmerresearch.grpc.CommandStatus.Parser, new[]{ "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.shimmerresearch.grpc.HelloRequest), global::com.shimmerresearch.grpc.HelloRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.shimmerresearch.grpc.HelloReply), global::com.shimmerresearch.grpc.HelloReply.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.shimmerresearch.grpc.ShimmerRequest), global::com.shimmerresearch.grpc.ShimmerRequest.Parser, new[]{ "Address" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.shimmerresearch.grpc.StreamRequest), global::com.shimmerresearch.grpc.StreamRequest.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.shimmerresearch.grpc.ObjectCluster2), global::com.shimmerresearch.grpc.ObjectCluster2.Parser, new[]{ "Name", "BluetoothAddress", "CommunicationType", "DataMap", "SystemTime", "CalibratedTimeStamp" }, null, new[]{ typeof(global::com.shimmerresearch.grpc.ObjectCluster2.Types.CommunicationType) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::com.shimmerresearch.grpc.ObjectCluster2.Types.FormatCluster2), global::com.shimmerresearch.grpc.ObjectCluster2.Types.FormatCluster2.Parser, new[]{ "FormatMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::com.shimmerresearch.grpc.ObjectCluster2.Types.FormatCluster2.Types.DataCluster2), global::com.shimmerresearch.grpc.ObjectCluster2.Types.FormatCluster2.Types.DataCluster2.Parser, new[]{ "Unit", "Data", "DataArray" }, null, null, null, null),
            null, }),
            null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.shimmerresearch.grpc.StringMsg), global::com.shimmerresearch.grpc.StringMsg.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.shimmerresearch.grpc.StringArrayMsg), global::com.shimmerresearch.grpc.StringArrayMsg.Parser, new[]{ "MessageArray" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.shimmerresearch.grpc.BoolMsg), global::com.shimmerresearch.grpc.BoolMsg.Parser, new[]{ "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.shimmerresearch.grpc.DoubleMsg), global::com.shimmerresearch.grpc.DoubleMsg.Parser, new[]{ "Number" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.shimmerresearch.grpc.OperationRequest), global::com.shimmerresearch.grpc.OperationRequest.Parser, new[]{ "IsFinished", "IsSuccess", "Message", "ProgressPercentage", "ProgressPercentageParsed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.shimmerresearch.grpc.ShimmersInfo), global::com.shimmerresearch.grpc.ShimmersInfo.Parser, new[]{ "State", "Message", "ShimmerMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::com.shimmerresearch.grpc.ShimmersInfo.Types.ShimmerInfo), global::com.shimmerresearch.grpc.ShimmersInfo.Types.ShimmerInfo.Parser, new[]{ "Name", "UniqueId", "BluetoothAddress", "TrialName", "BatteryPercentageParsed", "BatteryPercentage", "ChargingStatusParsed", "DriveCapacity", "DriveSpaceUsed", "DriveSpaceFree", "DriveCapacityParsed", "IsRealTimeClockSet", "LastReadRtcValueMilliSecs", "LastReadRtcValueParsed", "HwVersionParsed", "ExpBrdVersionParsed", "FwVersionParsed", "PairedDevice", "ConfigTime", "ConfigTimeParsed", "Ieee802154Info" }, null, null, null, null),
            null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.shimmerresearch.grpc.Ieee802154Info), global::com.shimmerresearch.grpc.Ieee802154Info.Parser, new[]{ "RadioChannel", "RadioGroupId", "RadioDeviceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.shimmerresearch.grpc.InfoSpans), global::com.shimmerresearch.grpc.InfoSpans.Parser, new[]{ "State", "Message", "SpanMap", "Ieee802154Info" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::com.shimmerresearch.grpc.InfoSpans.Types.InfoSpan), global::com.shimmerresearch.grpc.InfoSpans.Types.InfoSpan.Parser, new[]{ "UniqueId", "PortBsl", "PortComms" }, null, null, null, null),
            null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::com.shimmerresearch.grpc.EmulatedDevices), global::com.shimmerresearch.grpc.EmulatedDevices.Parser, new[]{ "State", "Message", "IsEmulatorSide", "EmulatedDevicesMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::com.shimmerresearch.grpc.EmulatedDevices.Types.EmulatedDevice), global::com.shimmerresearch.grpc.EmulatedDevices.Types.EmulatedDevice.Parser, new[]{ "UniqueId", "DeviceTypeOrdinal", "HwDeviceInterfacePath", "IsDeviceEnabled" }, null, null, null, null),
            null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FileByteTransfer : pb::IMessage<FileByteTransfer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FileByteTransfer> _parser = new pb::MessageParser<FileByteTransfer>(() => new FileByteTransfer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileByteTransfer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.shimmerresearch.grpc.ShimmerGrpcAndOJCReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileByteTransfer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileByteTransfer(FileByteTransfer other) : this() {
      name_ = other.name_;
      data_ = other.data_;
      endoffile_ = other.endoffile_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileByteTransfer Clone() {
      return new FileByteTransfer(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "endoffile" field.</summary>
    public const int EndoffileFieldNumber = 3;
    private bool endoffile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Endoffile {
      get { return endoffile_; }
      set {
        endoffile_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileByteTransfer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileByteTransfer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Data != other.Data) return false;
      if (Endoffile != other.Endoffile) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (Endoffile != false) hash ^= Endoffile.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (Endoffile != false) {
        output.WriteRawTag(24);
        output.WriteBool(Endoffile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (Endoffile != false) {
        output.WriteRawTag(24);
        output.WriteBool(Endoffile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (Endoffile != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileByteTransfer other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.Endoffile != false) {
        Endoffile = other.Endoffile;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 24: {
            Endoffile = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 24: {
            Endoffile = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CommandStatus : pb::IMessage<CommandStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CommandStatus> _parser = new pb::MessageParser<CommandStatus>(() => new CommandStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommandStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.shimmerresearch.grpc.ShimmerGrpcAndOJCReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandStatus(CommandStatus other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommandStatus Clone() {
      return new CommandStatus(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private string status_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommandStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommandStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status.Length != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Status.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Status.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommandStatus other) {
      if (other == null) {
        return;
      }
      if (other.Status.Length != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Status = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Status = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request message containing the user's name.
  /// </summary>
  public sealed partial class HelloRequest : pb::IMessage<HelloRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HelloRequest> _parser = new pb::MessageParser<HelloRequest>(() => new HelloRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HelloRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.shimmerresearch.grpc.ShimmerGrpcAndOJCReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloRequest(HelloRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloRequest Clone() {
      return new HelloRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HelloRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HelloRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HelloRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The response message containing the greetings
  /// </summary>
  public sealed partial class HelloReply : pb::IMessage<HelloReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HelloReply> _parser = new pb::MessageParser<HelloReply>(() => new HelloReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HelloReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.shimmerresearch.grpc.ShimmerGrpcAndOJCReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloReply(HelloReply other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloReply Clone() {
      return new HelloReply(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HelloReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HelloReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HelloReply other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ShimmerRequest : pb::IMessage<ShimmerRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShimmerRequest> _parser = new pb::MessageParser<ShimmerRequest>(() => new ShimmerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShimmerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.shimmerresearch.grpc.ShimmerGrpcAndOJCReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShimmerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShimmerRequest(ShimmerRequest other) : this() {
      address_ = other.address_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShimmerRequest Clone() {
      return new ShimmerRequest(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShimmerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShimmerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShimmerRequest other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StreamRequest : pb::IMessage<StreamRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamRequest> _parser = new pb::MessageParser<StreamRequest>(() => new StreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.shimmerresearch.grpc.ShimmerGrpcAndOJCReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamRequest(StreamRequest other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamRequest Clone() {
      return new StreamRequest(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamRequest other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObjectCluster2 : pb::IMessage<ObjectCluster2>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjectCluster2> _parser = new pb::MessageParser<ObjectCluster2>(() => new ObjectCluster2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjectCluster2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.shimmerresearch.grpc.ShimmerGrpcAndOJCReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectCluster2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectCluster2(ObjectCluster2 other) : this() {
      name_ = other.name_;
      bluetoothAddress_ = other.bluetoothAddress_;
      communicationType_ = other.communicationType_;
      dataMap_ = other.dataMap_.Clone();
      systemTime_ = other.systemTime_;
      calibratedTimeStamp_ = other.calibratedTimeStamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectCluster2 Clone() {
      return new ObjectCluster2(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bluetoothAddress" field.</summary>
    public const int BluetoothAddressFieldNumber = 2;
    private string bluetoothAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BluetoothAddress {
      get { return bluetoothAddress_; }
      set {
        bluetoothAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "communicationType" field.</summary>
    public const int CommunicationTypeFieldNumber = 3;
    private global::com.shimmerresearch.grpc.ObjectCluster2.Types.CommunicationType communicationType_ = global::com.shimmerresearch.grpc.ObjectCluster2.Types.CommunicationType.Bt;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::com.shimmerresearch.grpc.ObjectCluster2.Types.CommunicationType CommunicationType {
      get { return communicationType_; }
      set {
        communicationType_ = value;
      }
    }

    /// <summary>Field number for the "dataMap" field.</summary>
    public const int DataMapFieldNumber = 4;
    private static readonly pbc::MapField<string, global::com.shimmerresearch.grpc.ObjectCluster2.Types.FormatCluster2>.Codec _map_dataMap_codec
        = new pbc::MapField<string, global::com.shimmerresearch.grpc.ObjectCluster2.Types.FormatCluster2>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::com.shimmerresearch.grpc.ObjectCluster2.Types.FormatCluster2.Parser), 34);
    private readonly pbc::MapField<string, global::com.shimmerresearch.grpc.ObjectCluster2.Types.FormatCluster2> dataMap_ = new pbc::MapField<string, global::com.shimmerresearch.grpc.ObjectCluster2.Types.FormatCluster2>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::com.shimmerresearch.grpc.ObjectCluster2.Types.FormatCluster2> DataMap {
      get { return dataMap_; }
    }

    /// <summary>Field number for the "systemTime" field.</summary>
    public const int SystemTimeFieldNumber = 5;
    private long systemTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SystemTime {
      get { return systemTime_; }
      set {
        systemTime_ = value;
      }
    }

    /// <summary>Field number for the "calibratedTimeStamp" field.</summary>
    public const int CalibratedTimeStampFieldNumber = 6;
    private double calibratedTimeStamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double CalibratedTimeStamp {
      get { return calibratedTimeStamp_; }
      set {
        calibratedTimeStamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjectCluster2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjectCluster2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (BluetoothAddress != other.BluetoothAddress) return false;
      if (CommunicationType != other.CommunicationType) return false;
      if (!DataMap.Equals(other.DataMap)) return false;
      if (SystemTime != other.SystemTime) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CalibratedTimeStamp, other.CalibratedTimeStamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (BluetoothAddress.Length != 0) hash ^= BluetoothAddress.GetHashCode();
      if (CommunicationType != global::com.shimmerresearch.grpc.ObjectCluster2.Types.CommunicationType.Bt) hash ^= CommunicationType.GetHashCode();
      hash ^= DataMap.GetHashCode();
      if (SystemTime != 0L) hash ^= SystemTime.GetHashCode();
      if (CalibratedTimeStamp != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CalibratedTimeStamp);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (BluetoothAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BluetoothAddress);
      }
      if (CommunicationType != global::com.shimmerresearch.grpc.ObjectCluster2.Types.CommunicationType.Bt) {
        output.WriteRawTag(24);
        output.WriteEnum((int) CommunicationType);
      }
      dataMap_.WriteTo(output, _map_dataMap_codec);
      if (SystemTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(SystemTime);
      }
      if (CalibratedTimeStamp != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(CalibratedTimeStamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (BluetoothAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BluetoothAddress);
      }
      if (CommunicationType != global::com.shimmerresearch.grpc.ObjectCluster2.Types.CommunicationType.Bt) {
        output.WriteRawTag(24);
        output.WriteEnum((int) CommunicationType);
      }
      dataMap_.WriteTo(ref output, _map_dataMap_codec);
      if (SystemTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(SystemTime);
      }
      if (CalibratedTimeStamp != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(CalibratedTimeStamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (BluetoothAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BluetoothAddress);
      }
      if (CommunicationType != global::com.shimmerresearch.grpc.ObjectCluster2.Types.CommunicationType.Bt) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CommunicationType);
      }
      size += dataMap_.CalculateSize(_map_dataMap_codec);
      if (SystemTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SystemTime);
      }
      if (CalibratedTimeStamp != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjectCluster2 other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.BluetoothAddress.Length != 0) {
        BluetoothAddress = other.BluetoothAddress;
      }
      if (other.CommunicationType != global::com.shimmerresearch.grpc.ObjectCluster2.Types.CommunicationType.Bt) {
        CommunicationType = other.CommunicationType;
      }
      dataMap_.Add(other.dataMap_);
      if (other.SystemTime != 0L) {
        SystemTime = other.SystemTime;
      }
      if (other.CalibratedTimeStamp != 0D) {
        CalibratedTimeStamp = other.CalibratedTimeStamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            BluetoothAddress = input.ReadString();
            break;
          }
          case 24: {
            CommunicationType = (global::com.shimmerresearch.grpc.ObjectCluster2.Types.CommunicationType) input.ReadEnum();
            break;
          }
          case 34: {
            dataMap_.AddEntriesFrom(input, _map_dataMap_codec);
            break;
          }
          case 40: {
            SystemTime = input.ReadInt64();
            break;
          }
          case 49: {
            CalibratedTimeStamp = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            BluetoothAddress = input.ReadString();
            break;
          }
          case 24: {
            CommunicationType = (global::com.shimmerresearch.grpc.ObjectCluster2.Types.CommunicationType) input.ReadEnum();
            break;
          }
          case 34: {
            dataMap_.AddEntriesFrom(ref input, _map_dataMap_codec);
            break;
          }
          case 40: {
            SystemTime = input.ReadInt64();
            break;
          }
          case 49: {
            CalibratedTimeStamp = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ObjectCluster2 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum CommunicationType {
        [pbr::OriginalName("BT")] Bt = 0,
        [pbr::OriginalName("SD")] Sd = 1,
        [pbr::OriginalName("Radio_802_15_4")] Radio802154 = 2,
      }

      public sealed partial class FormatCluster2 : pb::IMessage<FormatCluster2>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<FormatCluster2> _parser = new pb::MessageParser<FormatCluster2>(() => new FormatCluster2());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FormatCluster2> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::com.shimmerresearch.grpc.ObjectCluster2.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FormatCluster2() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FormatCluster2(FormatCluster2 other) : this() {
          formatMap_ = other.formatMap_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FormatCluster2 Clone() {
          return new FormatCluster2(this);
        }

        /// <summary>Field number for the "formatMap" field.</summary>
        public const int FormatMapFieldNumber = 1;
        private static readonly pbc::MapField<string, global::com.shimmerresearch.grpc.ObjectCluster2.Types.FormatCluster2.Types.DataCluster2>.Codec _map_formatMap_codec
            = new pbc::MapField<string, global::com.shimmerresearch.grpc.ObjectCluster2.Types.FormatCluster2.Types.DataCluster2>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::com.shimmerresearch.grpc.ObjectCluster2.Types.FormatCluster2.Types.DataCluster2.Parser), 10);
        private readonly pbc::MapField<string, global::com.shimmerresearch.grpc.ObjectCluster2.Types.FormatCluster2.Types.DataCluster2> formatMap_ = new pbc::MapField<string, global::com.shimmerresearch.grpc.ObjectCluster2.Types.FormatCluster2.Types.DataCluster2>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, global::com.shimmerresearch.grpc.ObjectCluster2.Types.FormatCluster2.Types.DataCluster2> FormatMap {
          get { return formatMap_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FormatCluster2);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FormatCluster2 other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!FormatMap.Equals(other.FormatMap)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= FormatMap.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          formatMap_.WriteTo(output, _map_formatMap_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          formatMap_.WriteTo(ref output, _map_formatMap_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += formatMap_.CalculateSize(_map_formatMap_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FormatCluster2 other) {
          if (other == null) {
            return;
          }
          formatMap_.Add(other.formatMap_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                formatMap_.AddEntriesFrom(input, _map_formatMap_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                formatMap_.AddEntriesFrom(ref input, _map_formatMap_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the FormatCluster2 message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class DataCluster2 : pb::IMessage<DataCluster2>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<DataCluster2> _parser = new pb::MessageParser<DataCluster2>(() => new DataCluster2());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<DataCluster2> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::com.shimmerresearch.grpc.ObjectCluster2.Types.FormatCluster2.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DataCluster2() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DataCluster2(DataCluster2 other) : this() {
              unit_ = other.unit_;
              data_ = other.data_;
              dataArray_ = other.dataArray_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DataCluster2 Clone() {
              return new DataCluster2(this);
            }

            /// <summary>Field number for the "unit" field.</summary>
            public const int UnitFieldNumber = 1;
            private string unit_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Unit {
              get { return unit_; }
              set {
                unit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "data" field.</summary>
            public const int DataFieldNumber = 2;
            private double data_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public double Data {
              get { return data_; }
              set {
                data_ = value;
              }
            }

            /// <summary>Field number for the "dataArray" field.</summary>
            public const int DataArrayFieldNumber = 3;
            private static readonly pb::FieldCodec<double> _repeated_dataArray_codec
                = pb::FieldCodec.ForDouble(26);
            private readonly pbc::RepeatedField<double> dataArray_ = new pbc::RepeatedField<double>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<double> DataArray {
              get { return dataArray_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as DataCluster2);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(DataCluster2 other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Unit != other.Unit) return false;
              if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Data, other.Data)) return false;
              if(!dataArray_.Equals(other.dataArray_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Unit.Length != 0) hash ^= Unit.GetHashCode();
              if (Data != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Data);
              hash ^= dataArray_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Unit.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Unit);
              }
              if (Data != 0D) {
                output.WriteRawTag(17);
                output.WriteDouble(Data);
              }
              dataArray_.WriteTo(output, _repeated_dataArray_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Unit.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Unit);
              }
              if (Data != 0D) {
                output.WriteRawTag(17);
                output.WriteDouble(Data);
              }
              dataArray_.WriteTo(ref output, _repeated_dataArray_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Unit.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Unit);
              }
              if (Data != 0D) {
                size += 1 + 8;
              }
              size += dataArray_.CalculateSize(_repeated_dataArray_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(DataCluster2 other) {
              if (other == null) {
                return;
              }
              if (other.Unit.Length != 0) {
                Unit = other.Unit;
              }
              if (other.Data != 0D) {
                Data = other.Data;
              }
              dataArray_.Add(other.dataArray_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Unit = input.ReadString();
                    break;
                  }
                  case 17: {
                    Data = input.ReadDouble();
                    break;
                  }
                  case 26:
                  case 25: {
                    dataArray_.AddEntriesFrom(input, _repeated_dataArray_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Unit = input.ReadString();
                    break;
                  }
                  case 17: {
                    Data = input.ReadDouble();
                    break;
                  }
                  case 26:
                  case 25: {
                    dataArray_.AddEntriesFrom(ref input, _repeated_dataArray_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  ///ConsensysApi related
  /// </summary>
  public sealed partial class StringMsg : pb::IMessage<StringMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StringMsg> _parser = new pb::MessageParser<StringMsg>(() => new StringMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StringMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.shimmerresearch.grpc.ShimmerGrpcAndOJCReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringMsg(StringMsg other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringMsg Clone() {
      return new StringMsg(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StringMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StringMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StringMsg other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StringArrayMsg : pb::IMessage<StringArrayMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StringArrayMsg> _parser = new pb::MessageParser<StringArrayMsg>(() => new StringArrayMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StringArrayMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.shimmerresearch.grpc.ShimmerGrpcAndOJCReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringArrayMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringArrayMsg(StringArrayMsg other) : this() {
      messageArray_ = other.messageArray_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringArrayMsg Clone() {
      return new StringArrayMsg(this);
    }

    /// <summary>Field number for the "messageArray" field.</summary>
    public const int MessageArrayFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_messageArray_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> messageArray_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> MessageArray {
      get { return messageArray_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StringArrayMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StringArrayMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!messageArray_.Equals(other.messageArray_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= messageArray_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      messageArray_.WriteTo(output, _repeated_messageArray_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      messageArray_.WriteTo(ref output, _repeated_messageArray_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += messageArray_.CalculateSize(_repeated_messageArray_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StringArrayMsg other) {
      if (other == null) {
        return;
      }
      messageArray_.Add(other.messageArray_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            messageArray_.AddEntriesFrom(input, _repeated_messageArray_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            messageArray_.AddEntriesFrom(ref input, _repeated_messageArray_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BoolMsg : pb::IMessage<BoolMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BoolMsg> _parser = new pb::MessageParser<BoolMsg>(() => new BoolMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BoolMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.shimmerresearch.grpc.ShimmerGrpcAndOJCReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolMsg(BoolMsg other) : this() {
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolMsg Clone() {
      return new BoolMsg(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private bool state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BoolMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BoolMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != false) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (State != false) {
        output.WriteRawTag(8);
        output.WriteBool(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (State != false) {
        output.WriteRawTag(8);
        output.WriteBool(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BoolMsg other) {
      if (other == null) {
        return;
      }
      if (other.State != false) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            State = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DoubleMsg : pb::IMessage<DoubleMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DoubleMsg> _parser = new pb::MessageParser<DoubleMsg>(() => new DoubleMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DoubleMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.shimmerresearch.grpc.ShimmerGrpcAndOJCReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoubleMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoubleMsg(DoubleMsg other) : this() {
      number_ = other.number_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoubleMsg Clone() {
      return new DoubleMsg(this);
    }

    /// <summary>Field number for the "number" field.</summary>
    public const int NumberFieldNumber = 1;
    private double number_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Number {
      get { return number_; }
      set {
        number_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DoubleMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DoubleMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Number, other.Number)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Number != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Number);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Number != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Number);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Number != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Number);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Number != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DoubleMsg other) {
      if (other == null) {
        return;
      }
      if (other.Number != 0D) {
        Number = other.Number;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Number = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Number = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OperationRequest : pb::IMessage<OperationRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OperationRequest> _parser = new pb::MessageParser<OperationRequest>(() => new OperationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OperationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.shimmerresearch.grpc.ShimmerGrpcAndOJCReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationRequest(OperationRequest other) : this() {
      isFinished_ = other.isFinished_;
      isSuccess_ = other.isSuccess_;
      message_ = other.message_;
      progressPercentage_ = other.progressPercentage_;
      progressPercentageParsed_ = other.progressPercentageParsed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationRequest Clone() {
      return new OperationRequest(this);
    }

    /// <summary>Field number for the "isFinished" field.</summary>
    public const int IsFinishedFieldNumber = 1;
    private bool isFinished_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFinished {
      get { return isFinished_; }
      set {
        isFinished_ = value;
      }
    }

    /// <summary>Field number for the "isSuccess" field.</summary>
    public const int IsSuccessFieldNumber = 2;
    private bool isSuccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSuccess {
      get { return isSuccess_; }
      set {
        isSuccess_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "progressPercentage" field.</summary>
    public const int ProgressPercentageFieldNumber = 4;
    private double progressPercentage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ProgressPercentage {
      get { return progressPercentage_; }
      set {
        progressPercentage_ = value;
      }
    }

    /// <summary>Field number for the "progressPercentageParsed" field.</summary>
    public const int ProgressPercentageParsedFieldNumber = 5;
    private string progressPercentageParsed_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProgressPercentageParsed {
      get { return progressPercentageParsed_; }
      set {
        progressPercentageParsed_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OperationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OperationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsFinished != other.IsFinished) return false;
      if (IsSuccess != other.IsSuccess) return false;
      if (Message != other.Message) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ProgressPercentage, other.ProgressPercentage)) return false;
      if (ProgressPercentageParsed != other.ProgressPercentageParsed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsFinished != false) hash ^= IsFinished.GetHashCode();
      if (IsSuccess != false) hash ^= IsSuccess.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (ProgressPercentage != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ProgressPercentage);
      if (ProgressPercentageParsed.Length != 0) hash ^= ProgressPercentageParsed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsFinished != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsFinished);
      }
      if (IsSuccess != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsSuccess);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (ProgressPercentage != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(ProgressPercentage);
      }
      if (ProgressPercentageParsed.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ProgressPercentageParsed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsFinished != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsFinished);
      }
      if (IsSuccess != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsSuccess);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (ProgressPercentage != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(ProgressPercentage);
      }
      if (ProgressPercentageParsed.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ProgressPercentageParsed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsFinished != false) {
        size += 1 + 1;
      }
      if (IsSuccess != false) {
        size += 1 + 1;
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (ProgressPercentage != 0D) {
        size += 1 + 8;
      }
      if (ProgressPercentageParsed.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProgressPercentageParsed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OperationRequest other) {
      if (other == null) {
        return;
      }
      if (other.IsFinished != false) {
        IsFinished = other.IsFinished;
      }
      if (other.IsSuccess != false) {
        IsSuccess = other.IsSuccess;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.ProgressPercentage != 0D) {
        ProgressPercentage = other.ProgressPercentage;
      }
      if (other.ProgressPercentageParsed.Length != 0) {
        ProgressPercentageParsed = other.ProgressPercentageParsed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsFinished = input.ReadBool();
            break;
          }
          case 16: {
            IsSuccess = input.ReadBool();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
          case 33: {
            ProgressPercentage = input.ReadDouble();
            break;
          }
          case 42: {
            ProgressPercentageParsed = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsFinished = input.ReadBool();
            break;
          }
          case 16: {
            IsSuccess = input.ReadBool();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
          case 33: {
            ProgressPercentage = input.ReadDouble();
            break;
          }
          case 42: {
            ProgressPercentageParsed = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ShimmersInfo : pb::IMessage<ShimmersInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShimmersInfo> _parser = new pb::MessageParser<ShimmersInfo>(() => new ShimmersInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShimmersInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.shimmerresearch.grpc.ShimmerGrpcAndOJCReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShimmersInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShimmersInfo(ShimmersInfo other) : this() {
      state_ = other.state_;
      message_ = other.message_;
      shimmerMap_ = other.shimmerMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShimmersInfo Clone() {
      return new ShimmersInfo(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private bool state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shimmerMap" field.</summary>
    public const int ShimmerMapFieldNumber = 3;
    private static readonly pbc::MapField<string, global::com.shimmerresearch.grpc.ShimmersInfo.Types.ShimmerInfo>.Codec _map_shimmerMap_codec
        = new pbc::MapField<string, global::com.shimmerresearch.grpc.ShimmersInfo.Types.ShimmerInfo>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::com.shimmerresearch.grpc.ShimmersInfo.Types.ShimmerInfo.Parser), 26);
    private readonly pbc::MapField<string, global::com.shimmerresearch.grpc.ShimmersInfo.Types.ShimmerInfo> shimmerMap_ = new pbc::MapField<string, global::com.shimmerresearch.grpc.ShimmersInfo.Types.ShimmerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::com.shimmerresearch.grpc.ShimmersInfo.Types.ShimmerInfo> ShimmerMap {
      get { return shimmerMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShimmersInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShimmersInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (Message != other.Message) return false;
      if (!ShimmerMap.Equals(other.ShimmerMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != false) hash ^= State.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      hash ^= ShimmerMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (State != false) {
        output.WriteRawTag(8);
        output.WriteBool(State);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      shimmerMap_.WriteTo(output, _map_shimmerMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (State != false) {
        output.WriteRawTag(8);
        output.WriteBool(State);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      shimmerMap_.WriteTo(ref output, _map_shimmerMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != false) {
        size += 1 + 1;
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      size += shimmerMap_.CalculateSize(_map_shimmerMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShimmersInfo other) {
      if (other == null) {
        return;
      }
      if (other.State != false) {
        State = other.State;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      shimmerMap_.Add(other.shimmerMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = input.ReadBool();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            shimmerMap_.AddEntriesFrom(input, _map_shimmerMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            State = input.ReadBool();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            shimmerMap_.AddEntriesFrom(ref input, _map_shimmerMap_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ShimmersInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class ShimmerInfo : pb::IMessage<ShimmerInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ShimmerInfo> _parser = new pb::MessageParser<ShimmerInfo>(() => new ShimmerInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ShimmerInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::com.shimmerresearch.grpc.ShimmersInfo.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ShimmerInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ShimmerInfo(ShimmerInfo other) : this() {
          name_ = other.name_;
          uniqueId_ = other.uniqueId_;
          bluetoothAddress_ = other.bluetoothAddress_;
          trialName_ = other.trialName_;
          batteryPercentageParsed_ = other.batteryPercentageParsed_;
          batteryPercentage_ = other.batteryPercentage_;
          chargingStatusParsed_ = other.chargingStatusParsed_;
          driveCapacity_ = other.driveCapacity_;
          driveSpaceUsed_ = other.driveSpaceUsed_;
          driveSpaceFree_ = other.driveSpaceFree_;
          driveCapacityParsed_ = other.driveCapacityParsed_;
          isRealTimeClockSet_ = other.isRealTimeClockSet_;
          lastReadRtcValueMilliSecs_ = other.lastReadRtcValueMilliSecs_;
          lastReadRtcValueParsed_ = other.lastReadRtcValueParsed_;
          hwVersionParsed_ = other.hwVersionParsed_;
          expBrdVersionParsed_ = other.expBrdVersionParsed_;
          fwVersionParsed_ = other.fwVersionParsed_;
          pairedDevice_ = other.pairedDevice_.Clone();
          configTime_ = other.configTime_;
          configTimeParsed_ = other.configTimeParsed_;
          ieee802154Info_ = other.ieee802154Info_ != null ? other.ieee802154Info_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ShimmerInfo Clone() {
          return new ShimmerInfo(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "uniqueId" field.</summary>
        public const int UniqueIdFieldNumber = 2;
        private string uniqueId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string UniqueId {
          get { return uniqueId_; }
          set {
            uniqueId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "bluetoothAddress" field.</summary>
        public const int BluetoothAddressFieldNumber = 3;
        private string bluetoothAddress_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string BluetoothAddress {
          get { return bluetoothAddress_; }
          set {
            bluetoothAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "trialName" field.</summary>
        public const int TrialNameFieldNumber = 4;
        private string trialName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TrialName {
          get { return trialName_; }
          set {
            trialName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "batteryPercentageParsed" field.</summary>
        public const int BatteryPercentageParsedFieldNumber = 5;
        private string batteryPercentageParsed_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string BatteryPercentageParsed {
          get { return batteryPercentageParsed_; }
          set {
            batteryPercentageParsed_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "batteryPercentage" field.</summary>
        public const int BatteryPercentageFieldNumber = 6;
        private double batteryPercentage_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double BatteryPercentage {
          get { return batteryPercentage_; }
          set {
            batteryPercentage_ = value;
          }
        }

        /// <summary>Field number for the "chargingStatusParsed" field.</summary>
        public const int ChargingStatusParsedFieldNumber = 7;
        private string chargingStatusParsed_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ChargingStatusParsed {
          get { return chargingStatusParsed_; }
          set {
            chargingStatusParsed_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "driveCapacity" field.</summary>
        public const int DriveCapacityFieldNumber = 8;
        private long driveCapacity_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long DriveCapacity {
          get { return driveCapacity_; }
          set {
            driveCapacity_ = value;
          }
        }

        /// <summary>Field number for the "driveSpaceUsed" field.</summary>
        public const int DriveSpaceUsedFieldNumber = 9;
        private long driveSpaceUsed_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long DriveSpaceUsed {
          get { return driveSpaceUsed_; }
          set {
            driveSpaceUsed_ = value;
          }
        }

        /// <summary>Field number for the "driveSpaceFree" field.</summary>
        public const int DriveSpaceFreeFieldNumber = 10;
        private long driveSpaceFree_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long DriveSpaceFree {
          get { return driveSpaceFree_; }
          set {
            driveSpaceFree_ = value;
          }
        }

        /// <summary>Field number for the "driveCapacityParsed" field.</summary>
        public const int DriveCapacityParsedFieldNumber = 11;
        private string driveCapacityParsed_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DriveCapacityParsed {
          get { return driveCapacityParsed_; }
          set {
            driveCapacityParsed_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "isRealTimeClockSet" field.</summary>
        public const int IsRealTimeClockSetFieldNumber = 12;
        private bool isRealTimeClockSet_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsRealTimeClockSet {
          get { return isRealTimeClockSet_; }
          set {
            isRealTimeClockSet_ = value;
          }
        }

        /// <summary>Field number for the "lastReadRtcValueMilliSecs" field.</summary>
        public const int LastReadRtcValueMilliSecsFieldNumber = 13;
        private long lastReadRtcValueMilliSecs_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long LastReadRtcValueMilliSecs {
          get { return lastReadRtcValueMilliSecs_; }
          set {
            lastReadRtcValueMilliSecs_ = value;
          }
        }

        /// <summary>Field number for the "lastReadRtcValueParsed" field.</summary>
        public const int LastReadRtcValueParsedFieldNumber = 14;
        private string lastReadRtcValueParsed_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LastReadRtcValueParsed {
          get { return lastReadRtcValueParsed_; }
          set {
            lastReadRtcValueParsed_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "hwVersionParsed" field.</summary>
        public const int HwVersionParsedFieldNumber = 15;
        private string hwVersionParsed_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string HwVersionParsed {
          get { return hwVersionParsed_; }
          set {
            hwVersionParsed_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "expBrdVersionParsed" field.</summary>
        public const int ExpBrdVersionParsedFieldNumber = 16;
        private string expBrdVersionParsed_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ExpBrdVersionParsed {
          get { return expBrdVersionParsed_; }
          set {
            expBrdVersionParsed_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "fwVersionParsed" field.</summary>
        public const int FwVersionParsedFieldNumber = 17;
        private string fwVersionParsed_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FwVersionParsed {
          get { return fwVersionParsed_; }
          set {
            fwVersionParsed_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "pairedDevice" field.</summary>
        public const int PairedDeviceFieldNumber = 18;
        private static readonly pb::FieldCodec<string> _repeated_pairedDevice_codec
            = pb::FieldCodec.ForString(146);
        private readonly pbc::RepeatedField<string> pairedDevice_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> PairedDevice {
          get { return pairedDevice_; }
        }

        /// <summary>Field number for the "configTime" field.</summary>
        public const int ConfigTimeFieldNumber = 19;
        private long configTime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ConfigTime {
          get { return configTime_; }
          set {
            configTime_ = value;
          }
        }

        /// <summary>Field number for the "configTimeParsed" field.</summary>
        public const int ConfigTimeParsedFieldNumber = 20;
        private string configTimeParsed_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ConfigTimeParsed {
          get { return configTimeParsed_; }
          set {
            configTimeParsed_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ieee802154Info" field.</summary>
        public const int Ieee802154InfoFieldNumber = 21;
        private global::com.shimmerresearch.grpc.Ieee802154Info ieee802154Info_;
        /// <summary>
        ///Applicable for GQ devices
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::com.shimmerresearch.grpc.Ieee802154Info Ieee802154Info {
          get { return ieee802154Info_; }
          set {
            ieee802154Info_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ShimmerInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ShimmerInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (UniqueId != other.UniqueId) return false;
          if (BluetoothAddress != other.BluetoothAddress) return false;
          if (TrialName != other.TrialName) return false;
          if (BatteryPercentageParsed != other.BatteryPercentageParsed) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BatteryPercentage, other.BatteryPercentage)) return false;
          if (ChargingStatusParsed != other.ChargingStatusParsed) return false;
          if (DriveCapacity != other.DriveCapacity) return false;
          if (DriveSpaceUsed != other.DriveSpaceUsed) return false;
          if (DriveSpaceFree != other.DriveSpaceFree) return false;
          if (DriveCapacityParsed != other.DriveCapacityParsed) return false;
          if (IsRealTimeClockSet != other.IsRealTimeClockSet) return false;
          if (LastReadRtcValueMilliSecs != other.LastReadRtcValueMilliSecs) return false;
          if (LastReadRtcValueParsed != other.LastReadRtcValueParsed) return false;
          if (HwVersionParsed != other.HwVersionParsed) return false;
          if (ExpBrdVersionParsed != other.ExpBrdVersionParsed) return false;
          if (FwVersionParsed != other.FwVersionParsed) return false;
          if(!pairedDevice_.Equals(other.pairedDevice_)) return false;
          if (ConfigTime != other.ConfigTime) return false;
          if (ConfigTimeParsed != other.ConfigTimeParsed) return false;
          if (!object.Equals(Ieee802154Info, other.Ieee802154Info)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (UniqueId.Length != 0) hash ^= UniqueId.GetHashCode();
          if (BluetoothAddress.Length != 0) hash ^= BluetoothAddress.GetHashCode();
          if (TrialName.Length != 0) hash ^= TrialName.GetHashCode();
          if (BatteryPercentageParsed.Length != 0) hash ^= BatteryPercentageParsed.GetHashCode();
          if (BatteryPercentage != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BatteryPercentage);
          if (ChargingStatusParsed.Length != 0) hash ^= ChargingStatusParsed.GetHashCode();
          if (DriveCapacity != 0L) hash ^= DriveCapacity.GetHashCode();
          if (DriveSpaceUsed != 0L) hash ^= DriveSpaceUsed.GetHashCode();
          if (DriveSpaceFree != 0L) hash ^= DriveSpaceFree.GetHashCode();
          if (DriveCapacityParsed.Length != 0) hash ^= DriveCapacityParsed.GetHashCode();
          if (IsRealTimeClockSet != false) hash ^= IsRealTimeClockSet.GetHashCode();
          if (LastReadRtcValueMilliSecs != 0L) hash ^= LastReadRtcValueMilliSecs.GetHashCode();
          if (LastReadRtcValueParsed.Length != 0) hash ^= LastReadRtcValueParsed.GetHashCode();
          if (HwVersionParsed.Length != 0) hash ^= HwVersionParsed.GetHashCode();
          if (ExpBrdVersionParsed.Length != 0) hash ^= ExpBrdVersionParsed.GetHashCode();
          if (FwVersionParsed.Length != 0) hash ^= FwVersionParsed.GetHashCode();
          hash ^= pairedDevice_.GetHashCode();
          if (ConfigTime != 0L) hash ^= ConfigTime.GetHashCode();
          if (ConfigTimeParsed.Length != 0) hash ^= ConfigTimeParsed.GetHashCode();
          if (ieee802154Info_ != null) hash ^= Ieee802154Info.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (UniqueId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(UniqueId);
          }
          if (BluetoothAddress.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(BluetoothAddress);
          }
          if (TrialName.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(TrialName);
          }
          if (BatteryPercentageParsed.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(BatteryPercentageParsed);
          }
          if (BatteryPercentage != 0D) {
            output.WriteRawTag(49);
            output.WriteDouble(BatteryPercentage);
          }
          if (ChargingStatusParsed.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(ChargingStatusParsed);
          }
          if (DriveCapacity != 0L) {
            output.WriteRawTag(64);
            output.WriteInt64(DriveCapacity);
          }
          if (DriveSpaceUsed != 0L) {
            output.WriteRawTag(72);
            output.WriteInt64(DriveSpaceUsed);
          }
          if (DriveSpaceFree != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(DriveSpaceFree);
          }
          if (DriveCapacityParsed.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(DriveCapacityParsed);
          }
          if (IsRealTimeClockSet != false) {
            output.WriteRawTag(96);
            output.WriteBool(IsRealTimeClockSet);
          }
          if (LastReadRtcValueMilliSecs != 0L) {
            output.WriteRawTag(104);
            output.WriteInt64(LastReadRtcValueMilliSecs);
          }
          if (LastReadRtcValueParsed.Length != 0) {
            output.WriteRawTag(114);
            output.WriteString(LastReadRtcValueParsed);
          }
          if (HwVersionParsed.Length != 0) {
            output.WriteRawTag(122);
            output.WriteString(HwVersionParsed);
          }
          if (ExpBrdVersionParsed.Length != 0) {
            output.WriteRawTag(130, 1);
            output.WriteString(ExpBrdVersionParsed);
          }
          if (FwVersionParsed.Length != 0) {
            output.WriteRawTag(138, 1);
            output.WriteString(FwVersionParsed);
          }
          pairedDevice_.WriteTo(output, _repeated_pairedDevice_codec);
          if (ConfigTime != 0L) {
            output.WriteRawTag(152, 1);
            output.WriteInt64(ConfigTime);
          }
          if (ConfigTimeParsed.Length != 0) {
            output.WriteRawTag(162, 1);
            output.WriteString(ConfigTimeParsed);
          }
          if (ieee802154Info_ != null) {
            output.WriteRawTag(170, 1);
            output.WriteMessage(Ieee802154Info);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (UniqueId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(UniqueId);
          }
          if (BluetoothAddress.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(BluetoothAddress);
          }
          if (TrialName.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(TrialName);
          }
          if (BatteryPercentageParsed.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(BatteryPercentageParsed);
          }
          if (BatteryPercentage != 0D) {
            output.WriteRawTag(49);
            output.WriteDouble(BatteryPercentage);
          }
          if (ChargingStatusParsed.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(ChargingStatusParsed);
          }
          if (DriveCapacity != 0L) {
            output.WriteRawTag(64);
            output.WriteInt64(DriveCapacity);
          }
          if (DriveSpaceUsed != 0L) {
            output.WriteRawTag(72);
            output.WriteInt64(DriveSpaceUsed);
          }
          if (DriveSpaceFree != 0L) {
            output.WriteRawTag(80);
            output.WriteInt64(DriveSpaceFree);
          }
          if (DriveCapacityParsed.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(DriveCapacityParsed);
          }
          if (IsRealTimeClockSet != false) {
            output.WriteRawTag(96);
            output.WriteBool(IsRealTimeClockSet);
          }
          if (LastReadRtcValueMilliSecs != 0L) {
            output.WriteRawTag(104);
            output.WriteInt64(LastReadRtcValueMilliSecs);
          }
          if (LastReadRtcValueParsed.Length != 0) {
            output.WriteRawTag(114);
            output.WriteString(LastReadRtcValueParsed);
          }
          if (HwVersionParsed.Length != 0) {
            output.WriteRawTag(122);
            output.WriteString(HwVersionParsed);
          }
          if (ExpBrdVersionParsed.Length != 0) {
            output.WriteRawTag(130, 1);
            output.WriteString(ExpBrdVersionParsed);
          }
          if (FwVersionParsed.Length != 0) {
            output.WriteRawTag(138, 1);
            output.WriteString(FwVersionParsed);
          }
          pairedDevice_.WriteTo(ref output, _repeated_pairedDevice_codec);
          if (ConfigTime != 0L) {
            output.WriteRawTag(152, 1);
            output.WriteInt64(ConfigTime);
          }
          if (ConfigTimeParsed.Length != 0) {
            output.WriteRawTag(162, 1);
            output.WriteString(ConfigTimeParsed);
          }
          if (ieee802154Info_ != null) {
            output.WriteRawTag(170, 1);
            output.WriteMessage(Ieee802154Info);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (UniqueId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(UniqueId);
          }
          if (BluetoothAddress.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(BluetoothAddress);
          }
          if (TrialName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TrialName);
          }
          if (BatteryPercentageParsed.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(BatteryPercentageParsed);
          }
          if (BatteryPercentage != 0D) {
            size += 1 + 8;
          }
          if (ChargingStatusParsed.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ChargingStatusParsed);
          }
          if (DriveCapacity != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(DriveCapacity);
          }
          if (DriveSpaceUsed != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(DriveSpaceUsed);
          }
          if (DriveSpaceFree != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(DriveSpaceFree);
          }
          if (DriveCapacityParsed.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DriveCapacityParsed);
          }
          if (IsRealTimeClockSet != false) {
            size += 1 + 1;
          }
          if (LastReadRtcValueMilliSecs != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastReadRtcValueMilliSecs);
          }
          if (LastReadRtcValueParsed.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LastReadRtcValueParsed);
          }
          if (HwVersionParsed.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(HwVersionParsed);
          }
          if (ExpBrdVersionParsed.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ExpBrdVersionParsed);
          }
          if (FwVersionParsed.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(FwVersionParsed);
          }
          size += pairedDevice_.CalculateSize(_repeated_pairedDevice_codec);
          if (ConfigTime != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(ConfigTime);
          }
          if (ConfigTimeParsed.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(ConfigTimeParsed);
          }
          if (ieee802154Info_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(Ieee802154Info);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ShimmerInfo other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.UniqueId.Length != 0) {
            UniqueId = other.UniqueId;
          }
          if (other.BluetoothAddress.Length != 0) {
            BluetoothAddress = other.BluetoothAddress;
          }
          if (other.TrialName.Length != 0) {
            TrialName = other.TrialName;
          }
          if (other.BatteryPercentageParsed.Length != 0) {
            BatteryPercentageParsed = other.BatteryPercentageParsed;
          }
          if (other.BatteryPercentage != 0D) {
            BatteryPercentage = other.BatteryPercentage;
          }
          if (other.ChargingStatusParsed.Length != 0) {
            ChargingStatusParsed = other.ChargingStatusParsed;
          }
          if (other.DriveCapacity != 0L) {
            DriveCapacity = other.DriveCapacity;
          }
          if (other.DriveSpaceUsed != 0L) {
            DriveSpaceUsed = other.DriveSpaceUsed;
          }
          if (other.DriveSpaceFree != 0L) {
            DriveSpaceFree = other.DriveSpaceFree;
          }
          if (other.DriveCapacityParsed.Length != 0) {
            DriveCapacityParsed = other.DriveCapacityParsed;
          }
          if (other.IsRealTimeClockSet != false) {
            IsRealTimeClockSet = other.IsRealTimeClockSet;
          }
          if (other.LastReadRtcValueMilliSecs != 0L) {
            LastReadRtcValueMilliSecs = other.LastReadRtcValueMilliSecs;
          }
          if (other.LastReadRtcValueParsed.Length != 0) {
            LastReadRtcValueParsed = other.LastReadRtcValueParsed;
          }
          if (other.HwVersionParsed.Length != 0) {
            HwVersionParsed = other.HwVersionParsed;
          }
          if (other.ExpBrdVersionParsed.Length != 0) {
            ExpBrdVersionParsed = other.ExpBrdVersionParsed;
          }
          if (other.FwVersionParsed.Length != 0) {
            FwVersionParsed = other.FwVersionParsed;
          }
          pairedDevice_.Add(other.pairedDevice_);
          if (other.ConfigTime != 0L) {
            ConfigTime = other.ConfigTime;
          }
          if (other.ConfigTimeParsed.Length != 0) {
            ConfigTimeParsed = other.ConfigTimeParsed;
          }
          if (other.ieee802154Info_ != null) {
            if (ieee802154Info_ == null) {
              Ieee802154Info = new global::com.shimmerresearch.grpc.Ieee802154Info();
            }
            Ieee802154Info.MergeFrom(other.Ieee802154Info);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                UniqueId = input.ReadString();
                break;
              }
              case 26: {
                BluetoothAddress = input.ReadString();
                break;
              }
              case 34: {
                TrialName = input.ReadString();
                break;
              }
              case 42: {
                BatteryPercentageParsed = input.ReadString();
                break;
              }
              case 49: {
                BatteryPercentage = input.ReadDouble();
                break;
              }
              case 58: {
                ChargingStatusParsed = input.ReadString();
                break;
              }
              case 64: {
                DriveCapacity = input.ReadInt64();
                break;
              }
              case 72: {
                DriveSpaceUsed = input.ReadInt64();
                break;
              }
              case 80: {
                DriveSpaceFree = input.ReadInt64();
                break;
              }
              case 90: {
                DriveCapacityParsed = input.ReadString();
                break;
              }
              case 96: {
                IsRealTimeClockSet = input.ReadBool();
                break;
              }
              case 104: {
                LastReadRtcValueMilliSecs = input.ReadInt64();
                break;
              }
              case 114: {
                LastReadRtcValueParsed = input.ReadString();
                break;
              }
              case 122: {
                HwVersionParsed = input.ReadString();
                break;
              }
              case 130: {
                ExpBrdVersionParsed = input.ReadString();
                break;
              }
              case 138: {
                FwVersionParsed = input.ReadString();
                break;
              }
              case 146: {
                pairedDevice_.AddEntriesFrom(input, _repeated_pairedDevice_codec);
                break;
              }
              case 152: {
                ConfigTime = input.ReadInt64();
                break;
              }
              case 162: {
                ConfigTimeParsed = input.ReadString();
                break;
              }
              case 170: {
                if (ieee802154Info_ == null) {
                  Ieee802154Info = new global::com.shimmerresearch.grpc.Ieee802154Info();
                }
                input.ReadMessage(Ieee802154Info);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                UniqueId = input.ReadString();
                break;
              }
              case 26: {
                BluetoothAddress = input.ReadString();
                break;
              }
              case 34: {
                TrialName = input.ReadString();
                break;
              }
              case 42: {
                BatteryPercentageParsed = input.ReadString();
                break;
              }
              case 49: {
                BatteryPercentage = input.ReadDouble();
                break;
              }
              case 58: {
                ChargingStatusParsed = input.ReadString();
                break;
              }
              case 64: {
                DriveCapacity = input.ReadInt64();
                break;
              }
              case 72: {
                DriveSpaceUsed = input.ReadInt64();
                break;
              }
              case 80: {
                DriveSpaceFree = input.ReadInt64();
                break;
              }
              case 90: {
                DriveCapacityParsed = input.ReadString();
                break;
              }
              case 96: {
                IsRealTimeClockSet = input.ReadBool();
                break;
              }
              case 104: {
                LastReadRtcValueMilliSecs = input.ReadInt64();
                break;
              }
              case 114: {
                LastReadRtcValueParsed = input.ReadString();
                break;
              }
              case 122: {
                HwVersionParsed = input.ReadString();
                break;
              }
              case 130: {
                ExpBrdVersionParsed = input.ReadString();
                break;
              }
              case 138: {
                FwVersionParsed = input.ReadString();
                break;
              }
              case 146: {
                pairedDevice_.AddEntriesFrom(ref input, _repeated_pairedDevice_codec);
                break;
              }
              case 152: {
                ConfigTime = input.ReadInt64();
                break;
              }
              case 162: {
                ConfigTimeParsed = input.ReadString();
                break;
              }
              case 170: {
                if (ieee802154Info_ == null) {
                  Ieee802154Info = new global::com.shimmerresearch.grpc.Ieee802154Info();
                }
                input.ReadMessage(Ieee802154Info);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class Ieee802154Info : pb::IMessage<Ieee802154Info>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Ieee802154Info> _parser = new pb::MessageParser<Ieee802154Info>(() => new Ieee802154Info());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ieee802154Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.shimmerresearch.grpc.ShimmerGrpcAndOJCReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ieee802154Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ieee802154Info(Ieee802154Info other) : this() {
      radioChannel_ = other.radioChannel_;
      radioGroupId_ = other.radioGroupId_;
      radioDeviceId_ = other.radioDeviceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ieee802154Info Clone() {
      return new Ieee802154Info(this);
    }

    /// <summary>Field number for the "radioChannel" field.</summary>
    public const int RadioChannelFieldNumber = 1;
    private int radioChannel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RadioChannel {
      get { return radioChannel_; }
      set {
        radioChannel_ = value;
      }
    }

    /// <summary>Field number for the "radioGroupId" field.</summary>
    public const int RadioGroupIdFieldNumber = 2;
    private int radioGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RadioGroupId {
      get { return radioGroupId_; }
      set {
        radioGroupId_ = value;
      }
    }

    /// <summary>Field number for the "radioDeviceId" field.</summary>
    public const int RadioDeviceIdFieldNumber = 3;
    private int radioDeviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RadioDeviceId {
      get { return radioDeviceId_; }
      set {
        radioDeviceId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ieee802154Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ieee802154Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RadioChannel != other.RadioChannel) return false;
      if (RadioGroupId != other.RadioGroupId) return false;
      if (RadioDeviceId != other.RadioDeviceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RadioChannel != 0) hash ^= RadioChannel.GetHashCode();
      if (RadioGroupId != 0) hash ^= RadioGroupId.GetHashCode();
      if (RadioDeviceId != 0) hash ^= RadioDeviceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RadioChannel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RadioChannel);
      }
      if (RadioGroupId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RadioGroupId);
      }
      if (RadioDeviceId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RadioDeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RadioChannel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RadioChannel);
      }
      if (RadioGroupId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RadioGroupId);
      }
      if (RadioDeviceId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RadioDeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RadioChannel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RadioChannel);
      }
      if (RadioGroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RadioGroupId);
      }
      if (RadioDeviceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RadioDeviceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ieee802154Info other) {
      if (other == null) {
        return;
      }
      if (other.RadioChannel != 0) {
        RadioChannel = other.RadioChannel;
      }
      if (other.RadioGroupId != 0) {
        RadioGroupId = other.RadioGroupId;
      }
      if (other.RadioDeviceId != 0) {
        RadioDeviceId = other.RadioDeviceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RadioChannel = input.ReadInt32();
            break;
          }
          case 16: {
            RadioGroupId = input.ReadInt32();
            break;
          }
          case 24: {
            RadioDeviceId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RadioChannel = input.ReadInt32();
            break;
          }
          case 16: {
            RadioGroupId = input.ReadInt32();
            break;
          }
          case 24: {
            RadioDeviceId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InfoSpans : pb::IMessage<InfoSpans>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InfoSpans> _parser = new pb::MessageParser<InfoSpans>(() => new InfoSpans());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InfoSpans> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.shimmerresearch.grpc.ShimmerGrpcAndOJCReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoSpans() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoSpans(InfoSpans other) : this() {
      state_ = other.state_;
      message_ = other.message_;
      spanMap_ = other.spanMap_.Clone();
      ieee802154Info_ = other.ieee802154Info_ != null ? other.ieee802154Info_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoSpans Clone() {
      return new InfoSpans(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private bool state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "spanMap" field.</summary>
    public const int SpanMapFieldNumber = 3;
    private static readonly pbc::MapField<string, global::com.shimmerresearch.grpc.InfoSpans.Types.InfoSpan>.Codec _map_spanMap_codec
        = new pbc::MapField<string, global::com.shimmerresearch.grpc.InfoSpans.Types.InfoSpan>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::com.shimmerresearch.grpc.InfoSpans.Types.InfoSpan.Parser), 26);
    private readonly pbc::MapField<string, global::com.shimmerresearch.grpc.InfoSpans.Types.InfoSpan> spanMap_ = new pbc::MapField<string, global::com.shimmerresearch.grpc.InfoSpans.Types.InfoSpan>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::com.shimmerresearch.grpc.InfoSpans.Types.InfoSpan> SpanMap {
      get { return spanMap_; }
    }

    /// <summary>Field number for the "ieee802154Info" field.</summary>
    public const int Ieee802154InfoFieldNumber = 4;
    private global::com.shimmerresearch.grpc.Ieee802154Info ieee802154Info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::com.shimmerresearch.grpc.Ieee802154Info Ieee802154Info {
      get { return ieee802154Info_; }
      set {
        ieee802154Info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InfoSpans);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InfoSpans other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (Message != other.Message) return false;
      if (!SpanMap.Equals(other.SpanMap)) return false;
      if (!object.Equals(Ieee802154Info, other.Ieee802154Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != false) hash ^= State.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      hash ^= SpanMap.GetHashCode();
      if (ieee802154Info_ != null) hash ^= Ieee802154Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (State != false) {
        output.WriteRawTag(8);
        output.WriteBool(State);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      spanMap_.WriteTo(output, _map_spanMap_codec);
      if (ieee802154Info_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Ieee802154Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (State != false) {
        output.WriteRawTag(8);
        output.WriteBool(State);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      spanMap_.WriteTo(ref output, _map_spanMap_codec);
      if (ieee802154Info_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Ieee802154Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != false) {
        size += 1 + 1;
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      size += spanMap_.CalculateSize(_map_spanMap_codec);
      if (ieee802154Info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ieee802154Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InfoSpans other) {
      if (other == null) {
        return;
      }
      if (other.State != false) {
        State = other.State;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      spanMap_.Add(other.spanMap_);
      if (other.ieee802154Info_ != null) {
        if (ieee802154Info_ == null) {
          Ieee802154Info = new global::com.shimmerresearch.grpc.Ieee802154Info();
        }
        Ieee802154Info.MergeFrom(other.Ieee802154Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = input.ReadBool();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            spanMap_.AddEntriesFrom(input, _map_spanMap_codec);
            break;
          }
          case 34: {
            if (ieee802154Info_ == null) {
              Ieee802154Info = new global::com.shimmerresearch.grpc.Ieee802154Info();
            }
            input.ReadMessage(Ieee802154Info);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            State = input.ReadBool();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            spanMap_.AddEntriesFrom(ref input, _map_spanMap_codec);
            break;
          }
          case 34: {
            if (ieee802154Info_ == null) {
              Ieee802154Info = new global::com.shimmerresearch.grpc.Ieee802154Info();
            }
            input.ReadMessage(Ieee802154Info);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the InfoSpans message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class InfoSpan : pb::IMessage<InfoSpan>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<InfoSpan> _parser = new pb::MessageParser<InfoSpan>(() => new InfoSpan());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<InfoSpan> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::com.shimmerresearch.grpc.InfoSpans.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InfoSpan() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InfoSpan(InfoSpan other) : this() {
          uniqueId_ = other.uniqueId_;
          portBsl_ = other.portBsl_;
          portComms_ = other.portComms_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InfoSpan Clone() {
          return new InfoSpan(this);
        }

        /// <summary>Field number for the "uniqueId" field.</summary>
        public const int UniqueIdFieldNumber = 1;
        private string uniqueId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string UniqueId {
          get { return uniqueId_; }
          set {
            uniqueId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "portBsl" field.</summary>
        public const int PortBslFieldNumber = 2;
        private string portBsl_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string PortBsl {
          get { return portBsl_; }
          set {
            portBsl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "portComms" field.</summary>
        public const int PortCommsFieldNumber = 3;
        private string portComms_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string PortComms {
          get { return portComms_; }
          set {
            portComms_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as InfoSpan);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(InfoSpan other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UniqueId != other.UniqueId) return false;
          if (PortBsl != other.PortBsl) return false;
          if (PortComms != other.PortComms) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (UniqueId.Length != 0) hash ^= UniqueId.GetHashCode();
          if (PortBsl.Length != 0) hash ^= PortBsl.GetHashCode();
          if (PortComms.Length != 0) hash ^= PortComms.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (UniqueId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(UniqueId);
          }
          if (PortBsl.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(PortBsl);
          }
          if (PortComms.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(PortComms);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (UniqueId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(UniqueId);
          }
          if (PortBsl.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(PortBsl);
          }
          if (PortComms.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(PortComms);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (UniqueId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(UniqueId);
          }
          if (PortBsl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(PortBsl);
          }
          if (PortComms.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(PortComms);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(InfoSpan other) {
          if (other == null) {
            return;
          }
          if (other.UniqueId.Length != 0) {
            UniqueId = other.UniqueId;
          }
          if (other.PortBsl.Length != 0) {
            PortBsl = other.PortBsl;
          }
          if (other.PortComms.Length != 0) {
            PortComms = other.PortComms;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                UniqueId = input.ReadString();
                break;
              }
              case 18: {
                PortBsl = input.ReadString();
                break;
              }
              case 26: {
                PortComms = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                UniqueId = input.ReadString();
                break;
              }
              case 18: {
                PortBsl = input.ReadString();
                break;
              }
              case 26: {
                PortComms = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class EmulatedDevices : pb::IMessage<EmulatedDevices>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EmulatedDevices> _parser = new pb::MessageParser<EmulatedDevices>(() => new EmulatedDevices());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmulatedDevices> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.shimmerresearch.grpc.ShimmerGrpcAndOJCReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmulatedDevices() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmulatedDevices(EmulatedDevices other) : this() {
      state_ = other.state_;
      message_ = other.message_;
      isEmulatorSide_ = other.isEmulatorSide_;
      emulatedDevicesMap_ = other.emulatedDevicesMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmulatedDevices Clone() {
      return new EmulatedDevices(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private bool state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isEmulatorSide" field.</summary>
    public const int IsEmulatorSideFieldNumber = 3;
    private bool isEmulatorSide_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsEmulatorSide {
      get { return isEmulatorSide_; }
      set {
        isEmulatorSide_ = value;
      }
    }

    /// <summary>Field number for the "emulatedDevicesMap" field.</summary>
    public const int EmulatedDevicesMapFieldNumber = 4;
    private static readonly pbc::MapField<string, global::com.shimmerresearch.grpc.EmulatedDevices.Types.EmulatedDevice>.Codec _map_emulatedDevicesMap_codec
        = new pbc::MapField<string, global::com.shimmerresearch.grpc.EmulatedDevices.Types.EmulatedDevice>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::com.shimmerresearch.grpc.EmulatedDevices.Types.EmulatedDevice.Parser), 34);
    private readonly pbc::MapField<string, global::com.shimmerresearch.grpc.EmulatedDevices.Types.EmulatedDevice> emulatedDevicesMap_ = new pbc::MapField<string, global::com.shimmerresearch.grpc.EmulatedDevices.Types.EmulatedDevice>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::com.shimmerresearch.grpc.EmulatedDevices.Types.EmulatedDevice> EmulatedDevicesMap {
      get { return emulatedDevicesMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmulatedDevices);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmulatedDevices other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (Message != other.Message) return false;
      if (IsEmulatorSide != other.IsEmulatorSide) return false;
      if (!EmulatedDevicesMap.Equals(other.EmulatedDevicesMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != false) hash ^= State.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (IsEmulatorSide != false) hash ^= IsEmulatorSide.GetHashCode();
      hash ^= EmulatedDevicesMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (State != false) {
        output.WriteRawTag(8);
        output.WriteBool(State);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (IsEmulatorSide != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsEmulatorSide);
      }
      emulatedDevicesMap_.WriteTo(output, _map_emulatedDevicesMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (State != false) {
        output.WriteRawTag(8);
        output.WriteBool(State);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (IsEmulatorSide != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsEmulatorSide);
      }
      emulatedDevicesMap_.WriteTo(ref output, _map_emulatedDevicesMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != false) {
        size += 1 + 1;
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (IsEmulatorSide != false) {
        size += 1 + 1;
      }
      size += emulatedDevicesMap_.CalculateSize(_map_emulatedDevicesMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmulatedDevices other) {
      if (other == null) {
        return;
      }
      if (other.State != false) {
        State = other.State;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.IsEmulatorSide != false) {
        IsEmulatorSide = other.IsEmulatorSide;
      }
      emulatedDevicesMap_.Add(other.emulatedDevicesMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = input.ReadBool();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 24: {
            IsEmulatorSide = input.ReadBool();
            break;
          }
          case 34: {
            emulatedDevicesMap_.AddEntriesFrom(input, _map_emulatedDevicesMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            State = input.ReadBool();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 24: {
            IsEmulatorSide = input.ReadBool();
            break;
          }
          case 34: {
            emulatedDevicesMap_.AddEntriesFrom(ref input, _map_emulatedDevicesMap_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the EmulatedDevices message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class EmulatedDevice : pb::IMessage<EmulatedDevice>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<EmulatedDevice> _parser = new pb::MessageParser<EmulatedDevice>(() => new EmulatedDevice());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EmulatedDevice> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::com.shimmerresearch.grpc.EmulatedDevices.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EmulatedDevice() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EmulatedDevice(EmulatedDevice other) : this() {
          uniqueId_ = other.uniqueId_;
          deviceTypeOrdinal_ = other.deviceTypeOrdinal_;
          hwDeviceInterfacePath_ = other.hwDeviceInterfacePath_.Clone();
          isDeviceEnabled_ = other.isDeviceEnabled_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EmulatedDevice Clone() {
          return new EmulatedDevice(this);
        }

        /// <summary>Field number for the "uniqueId" field.</summary>
        public const int UniqueIdFieldNumber = 1;
        private string uniqueId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string UniqueId {
          get { return uniqueId_; }
          set {
            uniqueId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "deviceTypeOrdinal" field.</summary>
        public const int DeviceTypeOrdinalFieldNumber = 2;
        private int deviceTypeOrdinal_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int DeviceTypeOrdinal {
          get { return deviceTypeOrdinal_; }
          set {
            deviceTypeOrdinal_ = value;
          }
        }

        /// <summary>Field number for the "hwDeviceInterfacePath" field.</summary>
        public const int HwDeviceInterfacePathFieldNumber = 3;
        private static readonly pb::FieldCodec<string> _repeated_hwDeviceInterfacePath_codec
            = pb::FieldCodec.ForString(26);
        private readonly pbc::RepeatedField<string> hwDeviceInterfacePath_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> HwDeviceInterfacePath {
          get { return hwDeviceInterfacePath_; }
        }

        /// <summary>Field number for the "isDeviceEnabled" field.</summary>
        public const int IsDeviceEnabledFieldNumber = 4;
        private bool isDeviceEnabled_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsDeviceEnabled {
          get { return isDeviceEnabled_; }
          set {
            isDeviceEnabled_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EmulatedDevice);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EmulatedDevice other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UniqueId != other.UniqueId) return false;
          if (DeviceTypeOrdinal != other.DeviceTypeOrdinal) return false;
          if(!hwDeviceInterfacePath_.Equals(other.hwDeviceInterfacePath_)) return false;
          if (IsDeviceEnabled != other.IsDeviceEnabled) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (UniqueId.Length != 0) hash ^= UniqueId.GetHashCode();
          if (DeviceTypeOrdinal != 0) hash ^= DeviceTypeOrdinal.GetHashCode();
          hash ^= hwDeviceInterfacePath_.GetHashCode();
          if (IsDeviceEnabled != false) hash ^= IsDeviceEnabled.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (UniqueId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(UniqueId);
          }
          if (DeviceTypeOrdinal != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(DeviceTypeOrdinal);
          }
          hwDeviceInterfacePath_.WriteTo(output, _repeated_hwDeviceInterfacePath_codec);
          if (IsDeviceEnabled != false) {
            output.WriteRawTag(32);
            output.WriteBool(IsDeviceEnabled);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (UniqueId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(UniqueId);
          }
          if (DeviceTypeOrdinal != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(DeviceTypeOrdinal);
          }
          hwDeviceInterfacePath_.WriteTo(ref output, _repeated_hwDeviceInterfacePath_codec);
          if (IsDeviceEnabled != false) {
            output.WriteRawTag(32);
            output.WriteBool(IsDeviceEnabled);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (UniqueId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(UniqueId);
          }
          if (DeviceTypeOrdinal != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(DeviceTypeOrdinal);
          }
          size += hwDeviceInterfacePath_.CalculateSize(_repeated_hwDeviceInterfacePath_codec);
          if (IsDeviceEnabled != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EmulatedDevice other) {
          if (other == null) {
            return;
          }
          if (other.UniqueId.Length != 0) {
            UniqueId = other.UniqueId;
          }
          if (other.DeviceTypeOrdinal != 0) {
            DeviceTypeOrdinal = other.DeviceTypeOrdinal;
          }
          hwDeviceInterfacePath_.Add(other.hwDeviceInterfacePath_);
          if (other.IsDeviceEnabled != false) {
            IsDeviceEnabled = other.IsDeviceEnabled;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                UniqueId = input.ReadString();
                break;
              }
              case 16: {
                DeviceTypeOrdinal = input.ReadInt32();
                break;
              }
              case 26: {
                hwDeviceInterfacePath_.AddEntriesFrom(input, _repeated_hwDeviceInterfacePath_codec);
                break;
              }
              case 32: {
                IsDeviceEnabled = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                UniqueId = input.ReadString();
                break;
              }
              case 16: {
                DeviceTypeOrdinal = input.ReadInt32();
                break;
              }
              case 26: {
                hwDeviceInterfacePath_.AddEntriesFrom(ref input, _repeated_hwDeviceInterfacePath_codec);
                break;
              }
              case 32: {
                IsDeviceEnabled = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
